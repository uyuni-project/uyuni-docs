# Clean up build artifacts
.PHONY: clean-ko
clean-ko: clean-branding-ko ## Remove build artifacts from output directory (Antora and PDF)
	$(call clean-function,translations/ko,ko)

.PHONY: clean-branding-ko
clean-branding-ko:
	$(call clean-branding,ko)

.PHONY: copy-branding-ko
copy-branding-ko: copy-branding
	$(call copy-branding,ko)

.PHONY: validate-suma-ko
validate-suma-ko:
	$(call validate-product,translations/ko,suma-site.yml)

.PHONY: pdf-tar-suma-ko
pdf-tar-suma-ko:
	$(call pdf-tar-product,ko,susemanager-docs_ko-pdf,$(current_dir)/build/ko/pdf)

.PHONY: set-html-language-selector-suma-ko
set-html-language-selector-suma-ko: set-html-language-selector-suma
	mkdir -p $(shell dirname translations/ko/$(SUPPLEMENTAL_FILES_SUMA))
	cp -a translations/$(SUPPLEMENTAL_FILES_SUMA) translations/ko/$(SUPPLEMENTAL_FILES_SUMA)

.PHONY: prepare-antora-suma-ko
prepare-antora-suma-ko: copy-branding-ko set-html-language-selector-suma-ko
	cd $(current_dir)
	mkdir -p $(current_dir)/translations/ko && \
	cp -a antora.yml translations/ko/antora.yml && \
	sed "s/\(url\:\ https\:\/\/documentation\.suse\.com\/suma\/4\.3\/\)/\1ko\//;\
	s/\-\ url\:\ \./\-\ url\:\ \.\.\/\.\.\//;\
	s/start_path\:\ \./\start_path\:\ translations\/ko/;\
	s/dir:\ \.\/build\/en/dir:\ \.\.\/\.\.\/build\/ko/;" site.yml > translations/ko/suma-site.yml && \
	cp -a $(current_dir)/modules $(current_dir)/translations/en/
	find modules/ -maxdepth 1 -name "*" -type d -exec mkdir -p $(current_dir)/translations/ko/{} \; && \
	mkdir -p $(current_dir)/translations/ko/modules/ROOT/pages/
	cp -a $(current_dir)/modules/ROOT/pages/common_gfdl1.2_i.adoc $(current_dir)/translations/ko/modules/ROOT/pages/	
	cd $(current_dir)

.PHONY: antora-suma-ko
antora-suma-ko: prepare-antora-suma-ko pdf-all-suma-ko pdf-tar-suma-ko
	$(call antora-suma-function,translations/ko,ko)

.PHONY: obs-packages-suma-ko
obs-packages-suma-ko: pdf-all-suma-ko antora-suma-ko ## Generate SUMA OBS tar files
	$(call obs-packages-product,ko,ko/pdf,susemanager-docs_ko,susemanager-docs_ko-pdf)

# UYUNI

.PHONY: validate-uyuni-ko
validate-uyuni-ko:
	$(call validate-product,translations/ko,uyuni-site.yml)

.PHONY: pdf-tar-uyuni-ko
pdf-tar-uyuni-ko:
	$(call pdf-tar-product,ko,uyuni-docs_ko-pdf,$(current_dir)/build/ko/pdf)

.PHONY: set-html-language-selector-uyuni-ko
set-html-language-selector-uyuni-ko: set-html-language-selector-uyuni
	mkdir -p $(shell dirname translations/ko/$(SUPPLEMENTAL_FILES_UYUNI))
	cp -a translations/$(SUPPLEMENTAL_FILES_UYUNI) translations/ko/$(SUPPLEMENTAL_FILES_UYUNI)

.PHONY: prepare-antora-uyuni-ko
prepare-antora-uyuni-ko: copy-branding-ko set-html-language-selector-uyuni-ko
	cd $(current_dir)
	mkdir -p $(current_dir)/translations/ko && \
	cp antora.yml translations/ko/antora.yml && \
	sed "s/\(url\:\ https\:\/\/www\.uyuni-project\.org\/uyuni-docs\/\)/\1ko\//;\
	s/\-\ url\:\ \./\-\ url\:\ \.\.\/\.\.\//;\
	s/start_path\:\ \./\start_path\:\ translations\/ko/;\
	s/dir:\ \.\/build\/en/dir:\ \.\.\/\.\.\/build\/ko/;" site.yml > translations/ko/uyuni-site.yml && \
	cp -a $(current_dir)/modules $(current_dir)/translations/en/
	find modules/ -maxdepth 1 -name "*" -type d -exec mkdir -p $(current_dir)/translations/ko/{} \; && \
	mkdir -p $(current_dir)/translations/ko/modules/ROOT/pages/	
	cp -a $(current_dir)/modules/ROOT/pages/common_gfdl1.2_i.adoc $(current_dir)/translations/ko/modules/ROOT/pages/	
	cd $(current_dir)

.PHONY: antora-uyuni-ko
antora-uyuni-ko: prepare-antora-uyuni-ko pdf-all-uyuni-ko pdf-tar-uyuni-ko
	$(call antora-uyuni-function,translations/ko,ko)

.PHONY: obs-packages-uyuni-ko
obs-packages-uyuni-ko: pdf-all-uyuni-ko antora-uyuni-ko ## Generate UYUNI OBS tar files
	$(call obs-packages-product,ko,ko/pdf,uyuni-docs_ko,uyuni-docs_ko-pdf)
