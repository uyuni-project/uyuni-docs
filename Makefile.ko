# Clean up build artifacts
.PHONY: clean-ko
clean-ko: clean-branding-ko ## Remove build artifacts from output directory (Antora and PDF)
	$(call clean-function,translations/ko,ko)

.PHONY: clean-branding-ko
clean-branding-ko:
	$(call clean-branding,ko)

.PHONY: copy-branding-ko
copy-branding-ko: copy-branding
	$(call copy-branding,ko)

.PHONY: configure-mlm-branding-dsc-ko
configure-mlm-branding-dsc-ko: configure-mlm-branding-dsc
	$(call configure-mlm-branding-dsc,ko)

.PHONY: configure-mlm-branding-webui-ko
configure-mlm-branding-webui-ko: configure-mlm-branding-webui
	$(call configure-mlm-branding-webui,ko)

.PHONY: validate-mlm-ko
validate-mlm-ko:
	$(call validate-product,translations/ko,mlm-site.yml)

.PHONY: pdf-tar-mlm-ko
pdf-tar-mlm-ko:
	$(call pdf-tar-product,ko,suse-multi-linux-manager-docs_ko-pdf,$(current_dir)/build/ko/pdf)

.PHONY: set-html-language-selector-mlm-ko
set-html-language-selector-mlm-ko: set-html-language-selector-mlm
	mkdir -p $(shell dirname translations/ko/$(SUPPLEMENTAL_FILES_MLM))
	cp -a translations/$(SUPPLEMENTAL_FILES_MLM) translations/ko/$(SUPPLEMENTAL_FILES_MLM)

.PHONY: prepare-antora-mlm-ko
prepare-antora-mlm-ko: copy-branding-ko set-html-language-selector-mlm-ko
	cd $(current_dir)
	mkdir -p $(current_dir)/translations/ko && \
	cp -a antora.yml translations/ko/antora.yml && \
	sed "s/\(url\:\ https\:\/\/documentation\.suse\.com\/mlm\/4\.3\/\)/\1ko\//;\
	s/\-\ url\:\ \./\-\ url\:\ \.\.\/\.\.\//;\
	s/start_path\:\ \./\start_path\:\ translations\/ko/;\
	s/dir:\ \.\/build\/en/dir:\ \.\.\/\.\.\/build\/ko/;" site.yml > translations/ko/mlm-site.yml && \
	cp -a $(current_dir)/modules $(current_dir)/translations/en/
	find modules/ -maxdepth 1 -name "*" -type d -exec mkdir -p $(current_dir)/translations/ko/{} \; && \
	mkdir -p $(current_dir)/translations/ko/modules/ROOT/pages/
	cp -a $(current_dir)/modules/ROOT/pages/common_gfdl1.2_i.adoc $(current_dir)/translations/ko/modules/ROOT/pages/	
	cd $(current_dir)

.PHONY: antora-mlm-ko
antora-mlm-ko: configure-mlm-branding-dsc-ko prepare-antora-mlm-ko pdf-all-mlm-ko pdf-tar-mlm-ko
	$(call antora-mlm-function,translations/ko,ko)

	@echo "Running embedded PDF cleanup for ko..."

	@bash -c ' \
		# Cleanup Block Starts Here \
		\
		# Define directories \
		BUILD_DIR="build"; \
		PDF_DIR="$$BUILD_DIR/pdf"; \
		EN_PDF_DIR="$$BUILD_DIR/en/pdf"; \
		LOCALES="ko ja zh_CN"; \
		KEEP_FILES="suse_multi_linux_manager_administration_guide.pdf suse_multi_linux_manager_client-configuration_guide.pdf suse_multi_linux_manager_installation-and-upgrade_guide.pdf suse_multi_linux_manager_specialized-guides_guide.pdf"; \
		\
		# Debug Output \
		echo "BUILD_DIR is set to: $$BUILD_DIR"; \
		echo "PDF_DIR is set to: $$PDF_DIR"; \
		echo "EN_PDF_DIR is set to: $$EN_PDF_DIR"; \
		echo "Locales to process: $$LOCALES"; \
		echo "Files to keep: $$KEEP_FILES"; \
		\
		# Check if the build directory exists; create it if not \
		if [ ! -d "$$BUILD_DIR" ]; then \
		    echo "Warning: The build directory does not exist. Creating it now..."; \
		    mkdir -p "$$BUILD_DIR"; \
		fi; \
		\
		# Ensure target pdf directory exists \
		mkdir -p "$$PDF_DIR/en"; \
		\
		# Step 1: Copy all files from build/en/pdf/ to build/pdf/en/ \
		if [ -d "$$EN_PDF_DIR" ]; then \
		    echo "Copying English PDFs to $$PDF_DIR/en/"; \
		    cp -r "$$EN_PDF_DIR/"* "$$PDF_DIR/en/" 2>/dev/null || true; \
		else \
		    echo "Warning: English PDF directory not found. Skipping copy."; \
		fi; \
		\
		# Step 2 & 3: Process ko, ja, and zh_CN directories \
		for locale in $$LOCALES; do \
		    SRC_LOCALE_PDF="$$BUILD_DIR/$$locale/pdf"; \
		    DEST_LOCALE_PDF="$$PDF_DIR/$$locale"; \
		    \
		    if [ -d "$$SRC_LOCALE_PDF" ]; then \
		        echo "Processing PDFs for locale: $$locale"; \
		        mkdir -p "$$DEST_LOCALE_PDF"; \
		        \
		        for file in "$$SRC_LOCALE_PDF"/*; do \
		            if [ -f "$$file" ]; then \
		                filename=$$(basename "$$file"); \
		                if echo "$$KEEP_FILES" | grep -q "$$filename"; then \
		                    echo "Keeping $$file"; \
		                    mv "$$file" "$$DEST_LOCALE_PDF/"; \
		                else \
		                    echo "Removing $$file (not in keep list)"; \
		                    rm -f "$$file"; \
		                fi; \
		            fi; \
		        done; \
		        \
		        # Remove the now empty pdf directory \
		        rmdir "$$SRC_LOCALE_PDF" 2>/dev/null || true; \
		    else \
		        echo "Locale awaiting build...: $$locale"; \
		    fi; \
		done; \
		\
		# Step 4: Clean up remaining directories \
		echo "Cleaning up leftover PDF directories..."; \
		rm -rf "$$EN_PDF_DIR"; \
		for locale in $$LOCALES; do \
		    rm -rf "$$BUILD_DIR/$$locale/pdf"; \
		done; \
		\
		echo "PDF processing complete for ko." \
	'


.PHONY: obs-packages-mlm-ko
obs-packages-mlm-ko: configure-mlm-branding-webui-ko pdf-all-mlm-ko antora-mlm-ko ## Generate mlm OBS tar files
	$(call obs-packages-product,ko,ko/pdf,susemanager-docs_ko,susemanager-docs_ko-pdf)

# UYUNI

.PHONY: validate-uyuni-ko
validate-uyuni-ko:
	$(call validate-product,translations/ko,uyuni-site.yml)

.PHONY: pdf-tar-uyuni-ko
pdf-tar-uyuni-ko:
	$(call pdf-tar-product,ko,uyuni-docs_ko-pdf,$(current_dir)/build/ko/pdf)

.PHONY: set-html-language-selector-uyuni-ko
set-html-language-selector-uyuni-ko: set-html-language-selector-uyuni
	mkdir -p $(shell dirname translations/ko/$(SUPPLEMENTAL_FILES_UYUNI))
	cp -a translations/$(SUPPLEMENTAL_FILES_UYUNI) translations/ko/$(SUPPLEMENTAL_FILES_UYUNI)

.PHONY: prepare-antora-uyuni-ko
prepare-antora-uyuni-ko: copy-branding-ko set-html-language-selector-uyuni-ko
	cd $(current_dir)
	mkdir -p $(current_dir)/translations/ko && \
	cp antora.yml translations/ko/antora.yml && \
	sed "s/\(url\:\ https\:\/\/www\.uyuni-project\.org\/uyuni-docs\/\)/\1ko\//;\
	s/\-\ url\:\ \./\-\ url\:\ \.\.\/\.\.\//;\
	s/start_path\:\ \./\start_path\:\ translations\/ko/;\
	s/dir:\ \.\/build\/en/dir:\ \.\.\/\.\.\/build\/ko/;" site.yml > translations/ko/uyuni-site.yml && \
	cp -a $(current_dir)/modules $(current_dir)/translations/en/
	find modules/ -maxdepth 1 -name "*" -type d -exec mkdir -p $(current_dir)/translations/ko/{} \; && \
	mkdir -p $(current_dir)/translations/ko/modules/ROOT/pages/	
	cp -a $(current_dir)/modules/ROOT/pages/common_gfdl1.2_i.adoc $(current_dir)/translations/ko/modules/ROOT/pages/	
	cd $(current_dir)

.PHONY: antora-uyuni-ko
antora-uyuni-ko: prepare-antora-uyuni-ko pdf-all-uyuni-ko pdf-tar-uyuni-ko
	$(call antora-uyuni-function,translations/ko,ko)

.PHONY: obs-packages-uyuni-ko
obs-packages-uyuni-ko: pdf-all-uyuni-ko antora-uyuni-ko ## Generate UYUNI OBS tar files
	$(call obs-packages-product,ko,ko/pdf,uyuni-docs_ko,uyuni-docs_ko-pdf)
