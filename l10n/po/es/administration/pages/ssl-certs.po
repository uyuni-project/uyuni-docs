# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-08-27 01:41+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: modules/administration/pages/ssl-certs.adoc:2
#, no-wrap
msgid "SSL Certificates"
msgstr ""

#. type: Plain text
#: modules/administration/pages/ssl-certs.adoc:5
msgid ""
"{productname} uses SSL certificates to ensure that clients are registered to "
"the correct server."
msgstr ""

#. type: Plain text
#: modules/administration/pages/ssl-certs.adoc:8
msgid ""
"Every client that uses SSL to register to the {productname} Server checks "
"that it is connecting to the right server by validating against a server "
"certificate.  This process is called an SSL handshake."
msgstr ""

#. type: Plain text
#: modules/administration/pages/ssl-certs.adoc:11
msgid ""
"During the SSL handshake, the client will check that the hostname in the "
"server certificate matches what it expects.  The client also needs to check "
"if the server certificate is trusted."
msgstr ""

#. type: Plain text
#: modules/administration/pages/ssl-certs.adoc:14
msgid ""
"Every {productname} Server that uses SSL requires an SSL server "
"certificate.  Provide the path to the server certificate using the "
"``SERVER_CERT`` environment variable during setup, or with the ``--from-"
"server-cert`` option of the [command]``rhn-ssl-tool`` command."
msgstr ""

#. type: Plain text
#: modules/administration/pages/ssl-certs.adoc:17
msgid ""
"Certificate authorities (CAs) are certificates that are used to sign other "
"certificates.  All certificates must be signed by a certificate authority "
"(CA) in order for them to be considered valid, and for clients to be able to "
"successfully match against them."
msgstr ""

#. type: Plain text
#: modules/administration/pages/ssl-certs.adoc:23
msgid ""
"When an organization signs its own certificate, the certificate is "
"considered self-signed.  A self-signed certificate is straight-forward to "
"set up, and does not cost any money, but they are considered less secure.  "
"If you are using a self-signed certificate, you will have a root CA that is "
"signed with itself.  When you look at the details of a root CA, you will see "
"that the subject has the same value as the issuer.  Provide the path to your "
"root CA certificate using the ``CA_CERT`` environment variable during setup, "
"or with the ``--ca-cert`` option of the [command]``rhn-ssl-tool`` command."
msgstr ""

#. type: Plain text
#: modules/administration/pages/ssl-certs.adoc:26
msgid ""
"In order for SSL authentication to work correctly, the client must trust the "
"root CA.  This means that the root CA must be installed on every client."
msgstr ""

#. type: Plain text
#: modules/administration/pages/ssl-certs.adoc:29
msgid ""
"The default method of SSL authentication is for {productname} to use self-"
"signed certificates.  In this case, {productname} has generated all the "
"certificates, and the root CA has signed the server certificate directly."
msgstr ""

#. type: Plain text
#: modules/administration/pages/ssl-certs.adoc:34
msgid ""
"An alternative method is to use an intermediate CA.  In this case, the root "
"CA signs the intermediate CA.  The intermediate CA can then sign any number "
"of other intermediate CAs, and the final one signs the server certificate.  "
"This is referred to as a chained certificate."
msgstr ""

#. type: Plain text
#: modules/administration/pages/ssl-certs.adoc:37
msgid ""
"If you are using intermediate CAs in a chained certificate, the root CA is "
"installed on the client, and the server certificate is installed on the "
"server.  During the SSL handshake, clients must be able to verify the entire "
"chain of intermediate certificates between the root CA and the server "
"certificate, so they must be able to access all the intermediate "
"certificates."
msgstr ""

#. type: Plain text
#: modules/administration/pages/ssl-certs.adoc:42
msgid ""
"There are two main ways of achieving this.  In {productname}, by default, "
"all the intermediate CAs are installed on the client.  However, you could "
"also configure your services on the server to provide them to the client.  "
"In this case, during the SSL handshake, the server presents the server "
"certificate as well as all the intermediate CAs."
msgstr ""

#. type: Plain text
#: modules/administration/pages/ssl-certs.adoc:46
msgid ""
"Whichever method you choose, you must ensure that the ``CA_CERT`` "
"environment variable points to the root CA, and all intermediate CAs.  It "
"should not contain the server certificate.  The server certificate must be "
"defined at the ``SERVER_CERT`` environment variable."
msgstr ""

#. type: Plain text
#: modules/administration/pages/ssl-certs.adoc:53
msgid ""
"By default, {productname} uses a self-signed certificate.  For additional "
"security, you can arrange a third party CA to sign your certificates.  Third "
"party CAs perform checks to ensure that the information contained in the "
"certificate is correct.  They will usually charge an annual fee for this "
"service.  Using a third party CA makes certificates harder to spoof, and "
"will provide additional protection for your installation.  If you have "
"certificates signed by a third party CA, you can import them to your "
"{productname} installation."
msgstr ""

#. type: Plain text
#: modules/administration/pages/ssl-certs.adoc:55
msgid ""
"For more on self-signed certificates, see xref:administration:ssl-certs-"
"selfsigned.adoc[]."
msgstr ""

#. type: Plain text
#: modules/administration/pages/ssl-certs.adoc:55
msgid ""
"For more on imported certificates, see xref:administration:ssl-certs-"
"imported.adoc[]."
msgstr ""
