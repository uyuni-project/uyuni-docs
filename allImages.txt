modules/administration/pages/live-patching-sles15.adoc:23:image::enable_live_patching_kernel_live_install.png[scaledwidth=80%]
modules/administration/pages/live-patching-sles15.adoc:35:image::live_patching_criticalupdates.png[scaledwidth=80%]
modules/administration/pages/auditing.adoc:45:. Click btn:[Audit Servers] to check all systems, or click btn:[Audit Images] to check all images.
modules/administration/pages/maintenance-windows.adoc:99:image::maint_windows_multi.png[scaledwidth=80%]
modules/administration/pages/troubleshooting/tshoot-bare-metal-systems.adoc:7:* You must have the [path]``pxe-default-image`` package installed.
modules/administration/pages/troubleshooting/tshoot-bare-metal-systems.adoc:8:* File paths and parameters must be configured correctly. Check that the [path]``vmlinuz0`` and [path]``initrd0.img`` files, which are provided by [path]``pxe-default-image``, are in the locations specified in the [path]``rhn.conf`` configuration file.
modules/administration/pages/backup-restore.adoc:55:* [path]``/srv/www/os-images``
modules/administration/pages/users.adoc:57:| Image Administrator | Manages image profiles, builds, and stores.
modules/administration/pages/live-patching-sles12.adoc:25:image::enable_live_patching_kgraft_install.png[scaledwidth=80%]
modules/administration/pages/live-patching-sles12.adoc:37:image::live_patching_criticalupdates.png[scaledwidth=80%]
modules/administration/pages/monitoring.adoc:56:// TODO:: This should be an actual image.
modules/administration/pages/monitoring.adoc:242:image::grafana_sidemenu_datasource.png[scaledwidth=40%]
modules/administration/pages/monitoring.adoc:253:image::monitoring_grafana_example.png[scaledwidth=80%]
modules/administration/pages/monitoring.adoc:303:image::monitoring_enable_services.png[scaledwidth=80%]
modules/administration/pages/monitoring.adoc:490:image::monitoring_configure_formula.png[scaledwidth=80%]
modules/administration/pages/image-management.adoc:1:[[image-management]]
modules/administration/pages/image-management.adoc:5:[[at.images.overview]]
modules/administration/pages/image-management.adoc:8:{productname} enables system administrators to build containers and OS Images and push the result in image stores.
modules/administration/pages/image-management.adoc:11:.Procedure: Building and pushing images
modules/administration/pages/image-management.adoc:12:. Define an image store.
modules/administration/pages/image-management.adoc:13:. Define an image profile and associate it with a source (either a git repository or a directory).
modules/administration/pages/image-management.adoc:14:. Build the image.
modules/administration/pages/image-management.adoc:15:. Push the image to the image store.
modules/administration/pages/image-management.adoc:17:{productname} supports two distinct build types: Dockerfile and the Kiwi image system.
modules/administration/pages/image-management.adoc:19:The Kiwi build type is used to build system, virtual, and other images.
modules/administration/pages/image-management.adoc:20:The image store for the Kiwi build type is pre-defined as a file system directory at [path]``/srv/www/os-images`` on the server.
modules/administration/pages/image-management.adoc:21:{productname} serves the image store over HTTPS from [literal]``//<SERVER-FQDN>/os-images/``.
modules/administration/pages/image-management.adoc:22:The image store location is unique and is not customizable.
modules/administration/pages/image-management.adoc:24:Images are stored in [path]``/srv/www/os-image/ORGANIZATION-ID``.
modules/administration/pages/image-management.adoc:27:[[at.images.docker]]
modules/administration/pages/image-management.adoc:28:== Container images
modules/administration/pages/image-management.adoc:30:image::image-building.png[scaledwidth=80%]
modules/administration/pages/image-management.adoc:33:[[at.images.docker.requirements]]
modules/administration/pages/image-management.adoc:41:* A properly configured image store, such as a Docker registry.
modules/administration/pages/image-management.adoc:46:[[at.images.docker.buildhost]]
modules/administration/pages/image-management.adoc:49:To build images with {productname}, you need to create and configure a build host.
modules/administration/pages/image-management.adoc:55:The operating system on the build host must match the operating system on the targeted image.
modules/administration/pages/image-management.adoc:57:For example, build {sles}{nbsp}15 based images on a build host running {sles}{nbsp}15 (SP2 or later) OS version.
modules/administration/pages/image-management.adoc:58:Build {sles}{nbsp}12 based images on a build host running {sles}{nbsp}12 SP5 or {sles}{nbsp}12 SP4 OS version.
modules/administration/pages/image-management.adoc:63:For example, you must build Raspberry Pi {sles}{nbsp}15 SP3 images on a Raspberry Pi (aarch64 architecture) build host running {sles}{nbsp}15 SP3.
modules/administration/pages/image-management.adoc:85:[[at.images.docker.buildchannels]]
modules/administration/pages/image-management.adoc:88:The containers built using {productname} use channels associated to the activation key as repositories when building the image.
modules/administration/pages/image-management.adoc:96:image::systems_create_activation_key.png[scaledwidth=80%]
modules/administration/pages/image-management.adoc:108:[[at.images.docker.imagestore]]
modules/administration/pages/image-management.adoc:111:All built images are pushed to an image store.
modules/administration/pages/image-management.adoc:112:This section contains information about creating an image store.
modules/administration/pages/image-management.adoc:114:image::images_image_stores.png[scaledwidth=80%]
modules/administration/pages/image-management.adoc:120:image::images_image_stores_create.png[scaledwidth=80%]
modules/administration/pages/image-management.adoc:122:. Define a name for the image store in the [guimenu]``Label`` field.
modules/administration/pages/image-management.adoc:123:. Provide the path to your image registry by filling in the [guimenu]``URI`` field, as a fully qualified domain name (FQDN) for the container registry host (whether internal or external).
modules/administration/pages/image-management.adoc:129:The Registry URI can also be used to specify an image store on a registry that is already in use.
modules/administration/pages/image-management.adoc:135:. Click btn:[Create] to add the new image store.
modules/administration/pages/image-management.adoc:138:[[at.images.docker.profile]]
modules/administration/pages/image-management.adoc:141:All container images are built using an image profile, which contains the building instructions.
modules/administration/pages/image-management.adoc:142:This section contains information about creating an image profile with the {productname} {webui}.
modules/administration/pages/image-management.adoc:144:image::images_image_profiles.png[scaledwidth=80%]
modules/administration/pages/image-management.adoc:147:. To create an image profile select menu:Images[Profiles] and click btn:[Create].
modules/administration/pages/image-management.adoc:149:image::images_image_create_profile.png[scaledwidth=80%]
modules/administration/pages/image-management.adoc:151:. Provide a name for the image profile by filling in the [guimenu]``Label`` field.
modules/administration/pages/image-management.adoc:155:If your container image tag is in a format such as `myproject/myimage`, make sure your image store registry URI contains the `/myproject` suffix.
modules/administration/pages/image-management.adoc:211:If a `folder` is not specified, the image sources (Dockerfile sources) are expected to be in the root directory of the GitHub or GitLab checkout.
modules/administration/pages/image-management.adoc:215:  Activation keys ensure that images using a profile are assigned to the correct channel and packages.
modules/administration/pages/image-management.adoc:220:When you associate an activation key with an image profile you are ensuring any image using the profile uses the correct software channel and any packages in the channel.
modules/administration/pages/image-management.adoc:227:[[at.images.docker.sourceexample]]
modules/administration/pages/image-management.adoc:234:The [option]``ARG`` parameters ensure that the built image is associated with the desired repository served by {productname}.
modules/administration/pages/image-management.adoc:235:The [option]``ARG`` parameters also allow you to build image versions of {sles} which may differ from the version of {sles} used by the build host itself.
modules/administration/pages/image-management.adoc:239:The repository is determined by the activation key that you assigned to your image profile.
modules/administration/pages/image-management.adoc:257:# Add the repository path to the image
modules/administration/pages/image-management.adoc:268:# After building remove the repository path from image
modules/administration/pages/image-management.adoc:274:You can assign custom info key-value pairs to attach information to the image profiles.
modules/administration/pages/image-management.adoc:280:[[at.images.docker.building]]
modules/administration/pages/image-management.adoc:281:=== Build an image
modules/administration/pages/image-management.adoc:284:There are two ways to build an image.
modules/administration/pages/image-management.adoc:287:image::images_image_build.png[scaledwidth=80%]
modules/administration/pages/image-management.adoc:289:.Procedure: Building an image
modules/administration/pages/image-management.adoc:304:[[at.images.docker.importing]]
modules/administration/pages/image-management.adoc:305:=== Import an image
modules/administration/pages/image-management.adoc:307:You can import and inspect arbitrary images.
modules/administration/pages/image-management.adoc:310:When it has processed, the imported image is listed on the [guimenu]``Image List`` page.
modules/administration/pages/image-management.adoc:312:.Procedure: Importing an image
modules/administration/pages/image-management.adoc:318:The registry from where the image is pulled for inspection.
modules/administration/pages/image-management.adoc:321:The name of the image in the registry.
modules/administration/pages/image-management.adoc:324:The version of the image in the registry.
modules/administration/pages/image-management.adoc:327:The build host that pulls and inspects the image.
modules/administration/pages/image-management.adoc:330:The activation key that provides the path to the software channel that the image is inspected with.
modules/administration/pages/image-management.adoc:334:The entry for the image is created in the database, and an ``Inspect Image`` action on {productname} is scheduled.
modules/administration/pages/image-management.adoc:336:When it has been processed, you can find the imported image in the ``Image List``.
modules/administration/pages/image-management.adoc:337:It has a different icon in the ``Build`` column, to indicate that the image is imported.
modules/administration/pages/image-management.adoc:338:The status icon for the imported image can also be seen on the ``Overview`` tab for the image.
modules/administration/pages/image-management.adoc:342:[[at.images.docker.troubleshooting]]
modules/administration/pages/image-management.adoc:346:These are some known problems when working with images:
modules/administration/pages/image-management.adoc:353:[[at.images.kiwi]]
modules/administration/pages/image-management.adoc:356:OS Images are built by the Kiwi image system.
modules/administration/pages/image-management.adoc:357:The output image is customizable and can be PXE, QCOW2, LiveCD, or other types of images.
modules/administration/pages/image-management.adoc:363:[[at.images.kiwi.requirements]]
modules/administration/pages/image-management.adoc:366:The Kiwi image building feature is available for {salt} clients running {sles}{nbsp}12 and {sles}{nbsp}11.
modules/administration/pages/image-management.adoc:367://SLE15 images support is not yet released for SUMA4, but is part of SUMA4.0.4 as tech preview
modules/administration/pages/image-management.adoc:370:Kiwi image configuration files and configuration scripts must be accessible in one of these locations:
modules/administration/pages/image-management.adoc:381:Disk space depends on the actual size of the image.
modules/administration/pages/image-management.adoc:393:[[at.images.kiwi.buildhost]]
modules/administration/pages/image-management.adoc:396:To build all kinds of images with {productname}, create and configure a build host.
modules/administration/pages/image-management.adoc:403:The operating system on the build host must match the operating system on the targeted image.
modules/administration/pages/image-management.adoc:405:For example, build {sles}{nbsp}15 based images on a build host running  {sles}{nbsp}15 (SP2 or later) OS version.
modules/administration/pages/image-management.adoc:406:Build {sles}{nbsp}12 based images on a build host running {sles}{nbsp}12 SP5 or {sles}{nbsp}12 SP4 OS version.
modules/administration/pages/image-management.adoc:409:For example, you must build Raspberry PI {sles}{nbsp}15 SP3 image on a Raspberry PI (aarch64 architecture) build host running {sles}{nbsp}15 SP3.
modules/administration/pages/image-management.adoc:417:image::os-image-build-host.png[scaledwidth=80%]
modules/administration/pages/image-management.adoc:437:The certificate is packaged in RPM by the `mgr-package-rpm-certificate-osimage` package script.
modules/administration/pages/image-management.adoc:448:/usr/sbin/mgr-package-rpm-certificate-osimage --ca-cert-full-path /root/ssl-build/RHN-ORG-TRUSTED-SSL-CERT
modules/administration/pages/image-management.adoc:453:/usr/share/susemanager/salt/images/rhn-org-trusted-ssl-cert-osimage-1.0-1.noarch.rpm
modules/administration/pages/image-management.adoc:463:Specify the RPM package with the {productname} SSL certificate in the build source, and make sure your Kiwi configuration contains ``rhn-org-trusted-ssl-cert-osimage`` as a required package in the ``bootstrap`` section.
modules/administration/pages/image-management.adoc:471:    <package name="rhn-org-trusted-ssl-cert-osimage" bootinclude="true"/>
modules/administration/pages/image-management.adoc:479:[[at.images.kiwi.buildchannels]]
modules/administration/pages/image-management.adoc:482:Create an activation key associated with the channel that your OS Images can use as repositories when building the image.
modules/administration/pages/image-management.adoc:491:image::systems_create_activation_key.png[scaledwidth=80%]
modules/administration/pages/image-management.adoc:504:[[at.images.kiwi.imagestore]]
modules/administration/pages/image-management.adoc:509:By default, the image store is located at [path]``/srv/www/os-images``.
modules/administration/pages/image-management.adoc:513:Image stores for Kiwi build type, used to build system, virtual, and other images, are not supported yet.
modules/administration/pages/image-management.adoc:516:Images are always stored in [path]``/srv/www/os-images/ORGANIZATION-ID`` and are accessible via HTTP/HTTPS [url]``https://<susemanager_host>/os-images/ORGANIZATION-ID``.
modules/administration/pages/image-management.adoc:520:Images are always stored in [path]``/srv/www/os-images/ORGANIZATION-ID`` and are accessible via HTTP/HTTPS [url]``https://<uyuni_host>/os-images/ORGANIZATION-ID``.
modules/administration/pages/image-management.adoc:527:[[at.images.kiwi.profile]]
modules/administration/pages/image-management.adoc:530:Manage image profiles using the {webui}.
modules/administration/pages/image-management.adoc:532:image::images_image_profiles.png[scaledwidth=80%]
modules/administration/pages/image-management.adoc:535:. To create an image profile select from menu:Images[Profiles] and click btn:[Create].
modules/administration/pages/image-management.adoc:538:image::images_image_create_profile_kiwi.png[scaledwidth=80%]
modules/administration/pages/image-management.adoc:551:  Activation keys ensure that images using a profile are assigned to the correct channel and packages.
modules/administration/pages/image-management.adoc:556:Associate an activation key with an image profile to ensure the image profile uses the correct software channel, and any packages.
modules/administration/pages/image-management.adoc:567:URL to the git repository containing the sources of the image to be built.
modules/administration/pages/image-management.adoc:583:You can specify a directory that contains the image sources after the `:` character.
modules/administration/pages/image-management.adoc:596:https://myimagesourceserver.example.org/MyKiwiImage.tar.gz
modules/administration/pages/image-management.adoc:612:[[at.images.kiwi.sourceexample]]
modules/administration/pages/image-management.adoc:617:Usually, `config.sh` and `images.sh` are present as well.
modules/administration/pages/image-management.adoc:618:Sources can also contain files to be installed in the final image under the `root` subdirectory.
modules/administration/pages/image-management.adoc:622:{suse} provides examples of fully functional image sources at the https://github.com/SUSE/manager-build-profiles[SUSE/manager-build-profiles] public GitHub repository.
modules/administration/pages/image-management.adoc:630:<image schemaversion="6.1" name="POS_Image_JeOS6">
modules/administration/pages/image-management.adoc:648:        <type boot="saltboot/suse-SLES12" bootloader="grub2" checkprebuilt="true" compressed="false" filesystem="ext3" fsmountoptions="acl" fsnocheck="true" image="pxe" kernelcmdline="quiet"></type>
modules/administration/pages/image-management.adoc:655:    <packages type="image">
modules/administration/pages/image-management.adoc:667:        <package name="rhn-org-trusted-ssl-cert-osimage" bootinclude="true"/>
modules/administration/pages/image-management.adoc:675:</image>
modules/administration/pages/image-management.adoc:680:[[at.images.kiwi.building]]
modules/administration/pages/image-management.adoc:681:=== Build an image
modules/administration/pages/image-management.adoc:683:There are two ways to build an image using the {webui}.
modules/administration/pages/image-management.adoc:686:image::images_image_build.png[scaledwidth=80%]
modules/administration/pages/image-management.adoc:688:.Procedure: Building an image
modules/administration/pages/image-management.adoc:706:The build server cannot run any form of automounter during the image building process.
modules/administration/pages/image-management.adoc:708:If an automounter is running, the image build finishes successfully, but the checksum of the image is different and causes a failure.
modules/administration/pages/image-management.adoc:712:[[at.images.kiwi.inspection]]
modules/administration/pages/image-management.adoc:714:After the image is successfully built, the inspection phase begins.
modules/administration/pages/image-management.adoc:715:During the inspection phase {susemgr} collects information about the image:
modules/administration/pages/image-management.adoc:717:* List of packages installed in the image
modules/administration/pages/image-management.adoc:718:* Checksum of the image
modules/administration/pages/image-management.adoc:719:* Image type and other image details
modules/administration/pages/image-management.adoc:723:If the built image type is `PXE`, a {salt} pillar is also generated.
modules/administration/pages/image-management.adoc:724:Image pillars are stored in the database and the {salt} subsystem can access details about the generated image.
modules/administration/pages/image-management.adoc:725:Details include where the image files are located and provided, image checksums, information needed for network boot, and more.
modules/administration/pages/image-management.adoc:732:[[at.images.kiwi.troubleshooting]]
modules/administration/pages/image-management.adoc:735:Building an image requires several dependent steps.
modules/administration/pages/image-management.adoc:740:* There is enough disk space for the image on both the build host and the {productname} server
modules/administration/pages/image-management.adoc:743:* The RPM package with the {productname} public certificate is up to date and available at `/usr/share/susemanager/salt/images/rhn-org-trusted-ssl-cert-osimage-1.0-1.noarch.rpm`.
modules/administration/pages/image-management.adoc:744:  For more on how to refresh a public certificate RPM, see <<at.images.kiwi.buildhost>>.
modules/administration/pages/image-management.adoc:748:[[at.images.kiwi.limitations]]
modules/administration/pages/image-management.adoc:751:The section contains some known issues when working with images.
modules/administration/pages/image-management.adoc:754:* Importing Kiwi-based images is not supported.
modules/administration/pages/image-management.adoc:758:[[at.images.listing]]
modules/administration/pages/image-management.adoc:759:== List of built images
modules/administration/pages/image-management.adoc:761:To list available built images select menu:Images[Image List].
modules/administration/pages/image-management.adoc:762:A list of all images is displayed.
modules/administration/pages/image-management.adoc:764:image::images_list_images.png[scaledwidth=80%]
modules/administration/pages/image-management.adoc:766:Displayed data about images includes an image [guimenu]``Name``, its [guimenu]``Version``, [guimenu]``Revision``, and the build [guimenu]``Status``.
modules/administration/pages/image-management.adoc:767:You can also see the image update status with a listing of possible patch and package updates that are available for the image.
modules/administration/pages/image-management.adoc:777:Clicking the btn:[Details] button on an image provides a detailed view.
modules/administration/pages/image-management.adoc:778:The detailed view includes an exact list of relevant patches, list of all packages installed within the image and a build log.
modules/administration/pages/image-management.adoc:780:Clicking the btn:[Delete] button deletes the image from the list.
modules/administration/pages/task-schedules.adoc:7:image::admin_task_schedules.png[scaledwidth=80%]






modules/client-configuration/_attributes.adoc:3::imagesdir: {moduledir}/assets/images
modules/client-configuration/pages/virtualization.adoc:60:  In the [guimenu]``Source template image URL`` field, ensure you type the path to an operating system image.
modules/client-configuration/pages/client-upgrades-major.adoc:27:mkdir -p /srv/images/sle15sp2
modules/client-configuration/pages/client-upgrades-major.adoc:31:. Download an ISO image with the installation sources, and mount the ISO image on your server:
modules/client-configuration/pages/client-upgrades-major.adoc:43:cp -r /mnt/* /srv/images/sle15sp2
modules/client-configuration/pages/client-upgrades-major.adoc:47:. When the copy is complete, unmount the ISO image:
modules/client-configuration/pages/client-upgrades-major.adoc:56:This image is the {unifiedinstaller} and can be used for multiple autoinstallable distributions.
modules/client-configuration/pages/client-upgrades-major.adoc:70:    For example, [path]``/srv/images/sle15sp2``.
modules/client-configuration/pages/autoinst-unattended.adoc:4:The "bare metal" functionality allows you to register any new machine as soon as it connects to the local network, using a generic PXE boot image.
modules/client-configuration/pages/automatic-client-registration.adoc:20:User can pass the set of user data when deploying the image with Terraform, to automatically register the machine to {productname}.
modules/client-configuration/pages/activation-keys.adoc:25:image::provision-config-keys.png[scaledwidth=80%]
modules/client-configuration/pages/clients-sleses.adoc:191:To ensure you have all the packages you need, use a full DVD image, not a minimal or {jeos} image.
modules/client-configuration/pages/clients-sleses.adoc:213:. On the {productname} Server, at the command prompt, as root, copy the base media image to the [path]``/tmp/`` directory.
modules/client-configuration/pages/clients-sleses.adoc:220:. Mount the image:
modules/client-configuration/pages/clients-pubcloud.adoc:17:== Prepare on-demand images
modules/client-configuration/pages/clients-pubcloud.adoc:19:An instance started from an on-demand image provided by {suse} is automatically registered, and the update infrastructure and {sle} modules are activated.
modules/client-configuration/pages/clients-pubcloud.adoc:20:To use your on-demand image as a {productname} client, you need to disable this automation before you begin.
modules/client-configuration/pages/clients-pubcloud.adoc:24:.Procedure: Preparing on-demand images
modules/client-configuration/pages/clients-pubcloud.adoc:72:Public cloud images usually do not allow SSH login with username and password, but only SSH with a certificate.
modules/client-configuration/pages/clients-pubcloud.adoc:97:* When registering clients launched from a public cloud image (for example, AWS AMI), you need to do some additional configuration to prevent them from over-writing each other.
modules/client-configuration/pages/clients-alibaba.adoc:120:This is due to a to a known bug in the {alibabaclo}{nbsp}2 image.
modules/client-configuration/pages/clients-alibaba.adoc:124:If your instance is based on one of the affected image versions, the client should register correctly on the second registration attempt.
modules/client-configuration/pages/contact-methods-saltssh.adoc:28:This image demonstrates the Push via Salt SSH process path.
modules/client-configuration/pages/contact-methods-saltssh.adoc:31:image::salt-ssh-contact-taigon.png[scaledwidth=80%]
modules/client-configuration/pages/vhm-kubernetes.adoc:65:You can view runtime data about {kube} images in the {productname} {webui}, by navigating to menu:Images[Image List].
modules/client-configuration/pages/vhm-kubernetes.adoc:67:The image list table contains three columns:
modules/client-configuration/pages/vhm-kubernetes.adoc:71:A sequence number that increments on every rebuild for images built by {productname}, or on every import for externally built images.
modules/client-configuration/pages/vhm-kubernetes.adoc:74:Overall status of the running instances for each image in registered clusters.
modules/client-configuration/pages/vhm-kubernetes.adoc:77:Number of instances running this image across all the clusters registered in {productname}.
modules/client-configuration/pages/vhm-kubernetes.adoc:84:All the running instances are running the same build of the image as tracked by {productname}.
modules/client-configuration/pages/vhm-kubernetes.adoc:87:Some of the instances are running an older build of the image.
modules/client-configuration/pages/vhm-kubernetes.adoc:88:You might need to redeploy the image.
modules/client-configuration/pages/vhm-kubernetes.adoc:91:The checksum of the instance image does not match the image data contained in {productname}.
modules/client-configuration/pages/vhm-kubernetes.adoc:92:You might need to redeploy the image.
modules/client-configuration/pages/vhm-kubernetes.adoc:99:. Click btn:[Create] to create an image store.
modules/client-configuration/pages/vhm-kubernetes.adoc:101:. Click btn:[Create] to create an image profile.
modules/client-configuration/pages/vhm-kubernetes.adoc:103:. Navigate to menu:Images[Build] to build an image with the new profile.
modules/client-configuration/pages/vhm-kubernetes.adoc:104:. Deploy the image into one of the registered {kube} clusters.
modules/client-configuration/pages/vhm-kubernetes.adoc:107:The updated data should now be available in the image list at menu:Images[Image List].
modules/client-configuration/pages/vhm-kubernetes.adoc:114:. Add the registry that owns the image you want to import, if it is not already there.
modules/client-configuration/pages/vhm-kubernetes.adoc:116:. Complete the fields, select the image store you created, and click btn:[Import].
modules/client-configuration/pages/vhm-kubernetes.adoc:118:The imported image should now be available in the image list at menu:Images[Image List].
modules/client-configuration/pages/vhm-kubernetes.adoc:124:. In the {productname} {webui}, navigate to menu:Images[Image List], locate the row that contains the image you want to rebuild, and click btn:[Details].
modules/client-configuration/pages/vhm-kubernetes.adoc:128:When the rebuild has successfully completed, the runtime status of the image is updated in the image list at menu:Images[Image List].
modules/client-configuration/pages/vhm-kubernetes.adoc:129:This shows that the instances are running a previous build of the image.
modules/client-configuration/pages/vhm-kubernetes.adoc:133:You can only rebuild images if they were originally built with {productname}.
modules/client-configuration/pages/vhm-kubernetes.adoc:134:You cannot rebuild imported images.
modules/client-configuration/pages/vhm-kubernetes.adoc:144:    This section contains a information about the {kube} pods running this image in all the registered clusters.
modules/client-configuration/pages/supported-features-amazon.adoc:74:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-amazon.adoc:137:| Build Docker image with OS
modules/client-configuration/pages/supported-features-amazon.adoc:143:| Build Kiwi image with OS
modules/client-configuration/pages/supported-features-amazon.adoc:227:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-amazon.adoc:311:| Build Docker image with OS
modules/client-configuration/pages/supported-features-amazon.adoc:319:| Build Kiwi image with OS
modules/client-configuration/pages/supported-features-rh.adoc:113:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-rh.adoc:218:| Build Docker image with OS
modules/client-configuration/pages/supported-features-rh.adoc:228:| Build Kiwi image with OS
modules/client-configuration/pages/autoinst-cdrom.adoc:7:For information about using {cobbler} to prepare an ISO image, see xref:client-configuration:autoinst-cdrom.adoc#build-iso-with-cobbler[Build an ISO Image With {cobbler}].
modules/client-configuration/pages/autoinst-cdrom.adoc:9:For {suse} systems, it is often recommended to prepare an ISO image using KIWI.
modules/client-configuration/pages/autoinst-cdrom.adoc:12:In all cases, you use the resulting image to burn a CD-ROM or prepare a USB key.
modules/client-configuration/pages/autoinst-cdrom.adoc:18:{cobbler} can create ISO boot images that contain a set of distributions, kernels, and a menu that works in a similar way to a PXE installation.
modules/client-configuration/pages/autoinst-cdrom.adoc:25:In order to prepare an ISO image with {cobbler}, you need to prepare a distribution and a profile, similar to using network boot over PXE.
modules/client-configuration/pages/autoinst-cdrom.adoc:59:If you cannot write an ISO image to a public [path]``tmp`` directory, check your systemd settings in [path]``/usr/lib/systemd/system/cobblerd.service``.
modules/client-configuration/pages/autoinst-cdrom.adoc:67:KIWI is an image creation system.
modules/client-configuration/pages/autoinst-cdrom.adoc:68:You can use KIWI to create a bootable ISO image to be used by the target system for installation of a {suse} system.
modules/client-configuration/pages/autoinst-cdrom.adoc:69:When the system is rebooted or switched on, it boots from the image, loads the {ay} configuration from your {productname}, and installs {sles} according to the {ay} profile.
modules/client-configuration/pages/autoinst-cdrom.adoc:71:To use the ISO image, boot the system and type `autoyast` at the prompt (assuming you left the label for the {ay}  boot as ``autoyast``).
modules/client-configuration/pages/autoinst-cdrom.adoc:93:You can use [command]``mkisofs`` to create a bootable ISO image to be used by the target system for installation of a {redhat} system.
modules/client-configuration/pages/autoinst-cdrom.adoc:94:When the system is rebooted or switched on, it boots from the image, loads the {kickstart} configuration from your {productname}, and installs {rhel} according to the {kickstart} profile.
modules/client-configuration/pages/autoinst-distributions.adoc:7:You can extract the needed files from a DVD image.
modules/client-configuration/pages/autoinst-distributions.adoc:8:For information, see xref:client-configuration:autoinst-distributions.adoc#based-on-iso-image[Distribution Based on an ISO Image].
modules/client-configuration/pages/autoinst-distributions.adoc:22:[[based-on-iso-image]]
modules/client-configuration/pages/autoinst-distributions.adoc:26:This is usually a DVD [path]``.iso`` image that contains the Linux kernel, an [path]``initrd`` file, and other files required to boot the operating system in installation mode.
modules/client-configuration/pages/autoinst-distributions.adoc:33:. Loop-mount the ISO image, and copy its contents somewhere:
modules/client-configuration/pages/autoinst-distributions.adoc:36:# mount -o loop,ro <image_name>.iso /mnt
modules/client-configuration/pages/autoinst-distributions.adoc:38:# cp -a /mnt /srv/www/distributions/<image_name>
modules/client-configuration/pages/autoinst-distributions.adoc:98:These kernel options are needed for example when you use the "online installer" ISO images instead of the full DVD, or when you use the [package]``tpboot-installation`` package.
modules/client-configuration/pages/autoinst-pxeboot.adoc:23:image::cobbler_menu.png[scaledwidth=100%]
modules/client-configuration/pages/autoinst-reinstall.adoc:20:image::autoinstall_reinstall.png[scaledwidth=60%]
modules/client-configuration/pages/power-management.adoc:28:These automatically created system records are not bootable from the network, and include a reference to a dummy system image.
modules/client-configuration/pages/power-management.adoc:29:This is needed because {cobbler} does not currently support system records without profiles or images.
modules/client-configuration/pages/vhm-nutanix.adoc:10://image::nutanix-ready.png[scaledwidth=20%]
modules/client-configuration/pages/virt-xenkvm.adoc:86:Salt clients can be created using a template disk image, but not by using {ay} or {kickstart}.
modules/client-configuration/pages/virt-xenkvm.adoc:95:The distribution can be made available from a mounted local or remote directory, or on a loop-mounted ISO image.
modules/client-configuration/pages/virt-xenkvm.adoc:107:| {rhel} | [path]``images/pxeboot/vmlinuz``    | [path]``images/pxeboot/initrd.img``
modules/client-configuration/pages/virt-xenkvm.adoc:114:It can be on a remote resource, a local directory, or a loop-mounted ISO image.
modules/client-configuration/pages/supported-features-alibaba.adoc:74:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-alibaba.adoc:137:| Build Docker image with OS
modules/client-configuration/pages/supported-features-alibaba.adoc:143:| Build Kiwi image with OS
modules/client-configuration/pages/supported-features-almalinux.adoc:93:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-almalinux.adoc:177:| Build Docker image with OS
modules/client-configuration/pages/supported-features-almalinux.adoc:185:| Build Kiwi image with OS
modules/client-configuration/pages/supported-features-centos.adoc:76:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-centos.adoc:139:| Build Docker image with OS
modules/client-configuration/pages/supported-features-centos.adoc:145:| Build Kiwi image with OS
modules/client-configuration/pages/supported-features-debian.adoc:105:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-debian.adoc:210:| Build Docker image with OS
modules/client-configuration/pages/supported-features-debian.adoc:220:| Build Kiwi image with OS
modules/client-configuration/pages/supported-features-oracle.adoc:106:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-oracle.adoc:211:| Build Docker image with OS
modules/client-configuration/pages/supported-features-oracle.adoc:221:| Build Kiwi image with OS
modules/client-configuration/pages/supported-features-rocky.adoc:92:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-rocky.adoc:176:| Build Docker image with OS
modules/client-configuration/pages/supported-features-rocky.adoc:184:| Build Kiwi image with OS
modules/client-configuration/pages/supported-features-sle-micro.adoc:73:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-sle-micro.adoc:136:| Build Docker image with OS
modules/client-configuration/pages/supported-features-sle-micro.adoc:142:| Build Kiwi image with OS
modules/client-configuration/pages/supported-features-sles.adoc:108:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-sles.adoc:218:| Build Docker image with OS
modules/client-configuration/pages/supported-features-sles.adoc:228:| Build Kiwi image with OS
modules/client-configuration/pages/supported-features-ubuntu.adoc:91:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-ubuntu.adoc:175:| Build Docker image with OS
modules/client-configuration/pages/supported-features-ubuntu.adoc:183:| Build Kiwi image with OS
modules/client-configuration/pages/supported-features-ubuntu.adoc:274:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-ubuntu.adoc:350:| Build Docker image with OS
modules/client-configuration/pages/supported-features-ubuntu.adoc:358:| Build Kiwi image with OS
modules/client-configuration/pages/autoinst-owngpgkey.adoc:63:You can modify an installation image with the [command]``mksusecd`` utility.
modules/client-configuration/pages/autoinst-owngpgkey.adoc:68:.Procedure: Add a GPG key to an Installation ISO image
modules/client-configuration/pages/autoinst-owngpgkey.adoc:79:. Amend the existing ISO image with [command]``mksusecd``:
modules/client-configuration/pages/autoinst-owngpgkey.adoc:82:mksusecd --create <new-image>.iso --initrd initrdroot/ <old-image>.iso
modules/client-configuration/pages/supported-features-sll.adoc:110:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-sll.adoc:215:| Build Docker image with OS
modules/client-configuration/pages/supported-features-sll.adoc:225:| Build Kiwi image with OS
modules/client-configuration/pages/supported-features-opensuse-leap-micro.adoc:72:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-opensuse-leap-micro.adoc:135:| Build Docker image with OS
modules/client-configuration/pages/supported-features-opensuse-leap-micro.adoc:141:| Build Kiwi image with OS
modules/client-configuration/pages/supported-features-raspberrypios.adoc:73:| Virtual Guest Installation (image template), as Host OS
modules/client-configuration/pages/supported-features-raspberrypios.adoc:136:| Build Docker image with OS
modules/client-configuration/pages/supported-features-raspberrypios.adoc:142:| Build Kiwi image with OS



modules/reference/_attributes.adoc:3::imagesdir: {moduledir}/assets/images
modules/reference/assets/images-old/exclamation-triangle-solid.svg:26:        <dc:format>image/svg+xml</dc:format>
modules/reference/assets/images-old/fa-times-circle-o.svg:20:        <dc:format>image/svg+xml</dc:format>
modules/reference/assets/images-old/times-circle.svg:6:        <dc:format>image/svg+xml</dc:format>
modules/reference/pages/configuration/config-overview.adoc:54:* image:spacewalk-icon-software-channels.svg[Spacewalk Icon Software Channels,scaledwidth=1.6em] -- Centrally managed configuration file provided by a global configuration channel.
modules/reference/pages/configuration/config-overview.adoc:55:* image:fa-desktop.svg[FA Desktop,scaledwidth=1.6em] -- [Management] Locally managed configuration file, maybe overriding a centrally managed file.
modules/reference/pages/configuration/config-overview.adoc:56:* image:spacewalk-icon-sandbox.svg[Spacewalk Icon Sandbox,scaledwidth=1.6em] -- [Management] Sandbox configuration file.
modules/reference/pages/configuration/config-channels.adoc:80:NOTE: A sandbox icon (image:spacewalk-icon-sandbox.svg[]) indicates that the listed file is currently located in a local sandbox.
modules/reference/pages/images/images-build.adoc:1:[[ref-images-build]]
modules/reference/pages/images/images-build.adoc:4:The menu:Images[Build] section allows you to build operating system images for installing on clients.
modules/reference/pages/images/images-build.adoc:6:[[image-build-options]]
modules/reference/pages/images/images-build.adoc:11:| Image Profile | Select the image profile to use.
modules/reference/pages/images/images-build.adoc:12:Manage image profiles at menu:Images[Profiles]. | Blank.
modules/reference/pages/images/images-build.adoc:13:| Build Host    | Select the build host for the new image. | Blank.
modules/reference/pages/images/images-build.adoc:18:Built images are listed in menu:Images[Image List].
modules/reference/pages/images/images-build.adoc:20:For more information about images, see xref:administration:image-management.adoc[].
modules/reference/pages/images/images-image-list.adoc:1:[[ref-images-list]]
modules/reference/pages/images/images-image-list.adoc:5:The menu:Images[Image List] section displays your current operating system images.
modules/reference/pages/images/images-image-list.adoc:7:Click btn:[Import] to import a new Docker image.
modules/reference/pages/images/images-image-list.adoc:8:You can only import new images created from a Docker image using this mechanism.
modules/reference/pages/images/images-image-list.adoc:9:To import images based on Kiwi instead, see xref:administration:image-management.adoc[].
modules/reference/pages/images/images-image-list.adoc:13:Perform bulk actions by checking images in the list.
modules/reference/pages/images/images-image-list.adoc:14:Click btn:[Delete] to bulk delete images.
modules/reference/pages/images/images-image-list.adoc:16:[[image-list-columns]]
modules/reference/pages/images/images-image-list.adoc:21:| Name                 | Name of the image.
modules/reference/pages/images/images-image-list.adoc:22:| Version and Revision | Version and revision of the image.
modules/reference/pages/images/images-image-list.adoc:23:| Updates              | Any updates that are currently available for the image.
modules/reference/pages/images/images-image-list.adoc:24:| Patches and Packages | Any patches or packages that are currently available for the image.
modules/reference/pages/images/images-image-list.adoc:26:| Last Modified        | The time and date the image was last modified.
modules/reference/pages/images/images-image-list.adoc:29:For more information about images, see xref:administration:image-management.adoc[].
modules/reference/pages/images/images-menu.adoc:1:[[ref-images-menu]]
modules/reference/pages/images/images-menu.adoc:4:The menu:Images[Image List] section displays your current operating system images.
modules/reference/pages/images/images-menu.adoc:6:For more information about images, see xref:administration:image-management.adoc[].
modules/reference/pages/images/images-profiles.adoc:1:[[ref-images-profiles]]
modules/reference/pages/images/images-profiles.adoc:5:The menu:Images[Profiles] section displays your current image profiles.
modules/reference/pages/images/images-profiles.adoc:7:Click btn:[Create] to create a new image profile.
modules/reference/pages/images/images-profiles.adoc:13:For more information about images, see xref:administration:image-management.adoc[].
modules/reference/pages/images/images-stores.adoc:1:[[ref-images-stores]]
modules/reference/pages/images/images-stores.adoc:5:The menu:Images[Stores] section displays your current image stores.
modules/reference/pages/images/images-stores.adoc:7:Click btn:[Create] to create a new image store.
modules/reference/pages/images/images-stores.adoc:10:Perform bulk actions by checking images in the list.
modules/reference/pages/images/images-stores.adoc:11:Click btn:[Delete] to bulk delete image stores.
modules/reference/pages/images/images-stores.adoc:13:For more information about images, see xref:administration:image-management.adoc[].
modules/reference/pages/patches/patch-list-all.adoc:17:| image::spacewalk-icon-enhancement.svg[] | Product enhancement advisory | Optional
modules/reference/pages/patches/patch-list-all.adoc:22:// The "a" in the table colspec is not a typo! It makes the table render the asciidoc for the image correctly. --LKB 2020-11-24
modules/reference/pages/patches/patch-list-relevant.adoc:17:| image:spacewalk-icon-enhancement.svg | Product enhancement advisory | Optional
modules/reference/pages/systems/system-details/sd-virtualization.adoc:115:Type a URL to the ``qcow2`` image to use, define the hardware requirements, and the proxy if required.
modules/reference/pages/systems/systems-overview.adoc:41:* image:spacewalk-icon-virtual-host.svg[Virtual Host,scaledwidth=1.8em] -- Virtual Host.
modules/reference/pages/systems/systems-overview.adoc:42:* image:spacewalk-icon-virtual-guest.svg[Virtual Guest,scaledwidth=1.8em] -- Virtual Guest.
modules/reference/pages/systems/systems-overview.adoc:43:* image:fa-236-non-virtual-system.svg[Non-Virtual System,scaledwidth=1.8em] -- Non-Virtual System.
modules/reference/pages/systems/systems-overview.adoc:44:* image:spacewalk-icon-unprov-system.svg[Unprovisioned System,scaledwidth=1.8em] -- Unprovisioned System.
modules/reference/pages/systems/systems-overview.adoc:53:* image:fa-check-circle.svg[Check Circle,scaledwidth=1.6em] -- System is up-to-date.
modules/reference/pages/systems/systems-overview.adoc:54:* image:fa-exclamation-circle.svg[Exclamation Circle,scaledwidth=1.6em] -- Critical patch (errata) available, update _strongly_ recommended.
modules/reference/pages/systems/systems-overview.adoc:55:* image:fa-warning.svg[Warning,scaledwidth=1.6em] -- Updates available and recommended.
modules/reference/pages/systems/systems-overview.adoc:56:* image:fa-question-circle.svg[Question,scaledwidth=1.8em] -- System not checking in properly (for 24 hours or more).
modules/reference/pages/systems/systems-overview.adoc:57:* image:fa-lock.svg[Lock,scaledwidth=1.8em] -- System is locked; actions prohibited.
modules/reference/pages/systems/systems-overview.adoc:58:* image:fa-rocket.svg[Rocket,scaledwidth=1.6em] -- System is being deployed using AutoYaST or Kickstart.
modules/reference/pages/systems/systems-overview.adoc:59:* image:fa-clock-o.svg[Clock,scaledwidth=1.8em] -- Updates have been scheduled.
modules/reference/pages/systems/systems-overview.adoc:60:* image:fa-times-circle.svg[Times,scaledwidth=1.8em] -- System not entitled to any update service.



modules/retail/_attributes.adoc:3::imagesdir: {moduledir}/assets/images
modules/retail/pages/retail-delta-images.adoc:1:[[retail-delta-images]]
modules/retail/pages/retail-delta-images.adoc:4:If you have very large images that you need to synchronize to the branch server, you can use delta images to save network bandwidth.
modules/retail/pages/retail-delta-images.adoc:6:A delta image contains only the differences between two regular images.
modules/retail/pages/retail-delta-images.adoc:7:If there are only a few changes between two images, the delta image can be very small.
modules/retail/pages/retail-delta-images.adoc:8:Synchronizing a delta image to the branch consumes less network bandwidth but it requires some extra hardware resources on the branch server to rebuild the installable image.
modules/retail/pages/retail-delta-images.adoc:14:The [command]``retail_create_delta`` tool creates a delta image on the {productname} server.
modules/retail/pages/retail-delta-images.adoc:17:Use the name and the version strings of the target and the source image as parameters to the command.
modules/retail/pages/retail-delta-images.adoc:18:The format of the parameters must be `<NAME>-<VERSION>` and they must correspond to the image names and versions available in the pillar.
modules/retail/pages/retail-delta-images.adoc:22:images:
modules/retail/pages/retail-delta-images.adoc:39:This command will generate the delta image between version 6.0.0 and version 6.0.1.
modules/retail/pages/retail-delta-images.adoc:40:The resulting delta file is saved in [path]``/srv/www/os-images`` and the corresponding pillar file in [path]``/srv/susemanager/pillar_data/images/``.
modules/retail/pages/retail-delta-images.adoc:54:When an image is synchronized to the branch server, the ``image-sync-formula`` first checks whether the source image is available on the branch server.
modules/retail/pages/retail-delta-images.adoc:55:Only if the source image is available, the delta will be downloaded to save network bandwidth.
modules/retail/pages/retail-deploy-section.adoc:5:You can prepare the {productname} {smr} installation for image deployment.
modules/retail/pages/retail-saltboot-redeployment.adoc:2:= Forced {saltboot} image redeployment
modules/retail/pages/retail-saltboot-redeployment.adoc:4:Systems provisioned by {saltboot} are usually redeployed or repartitioned automatically when a new image is available, or {saltboot} partitioning changes.
modules/retail/pages/retail-saltboot-redeployment.adoc:6:Occasionally, however, it is needed to force {saltboot} to redeploy an image or repartition disk, even when automation would not do so.
modules/retail/pages/retail-saltboot-redeployment.adoc:26:.Procedure: Forcing {saltboot} to redeploy image
modules/retail/pages/retail-saltboot-redeployment.adoc:53:.Procedure: Create custom info key for image redeployment
modules/retail/pages/retail-saltboot-redeployment.adoc:57:. As [guimenu]``Description`` fill in [systemitem]``Force redeploy {saltboot} image``.
modules/retail/pages/retail-saltboot-redeployment.adoc:66:.Procedure: Assign custom value for image redeployment
modules/retail/pages/retail-saltboot-redeployment.adoc:115:.Procedure: Forcing {saltboot} to redeploy image using API call using spacecmd command
modules/retail/pages/retail-saltboot-redeployment.adoc:148:Without manual intervention, the terminal will download a new image on each reboot.
modules/retail/pages/retail-saltboot-redeployment.adoc:151:.Procedure: Force a {saltboot} to redeploy image using {saltboot} pillar
modules/retail/pages/retail-components.adoc:11:The {productname} server contains information about infrastructure, network topology, and everything required to automate image deployment and perform day-to-day operations on branches and terminals.
modules/retail/pages/retail-components.adoc:12:This can include database entries of registered systems, Salt pillar data for images, image assignments, partitioning, network setup, network services, and more.
modules/retail/pages/retail-components.adoc:19:They are used to securely build operating system images.
modules/retail/pages/retail-components.adoc:21:For more information on build hosts, see xref:administration:image-management.adoc[].
modules/retail/pages/retail-components.adoc:28:Branch servers provide services for PXE boot, and act as an image cache, Salt broker, and proxy for software components (RPM packages).
modules/retail/pages/retail-components.adoc:44:In most cases, different terminals will require a different operating system (OS) image to ensure they work correctly.
modules/retail/pages/retail-components.adoc:46:While both of these terminals require similar processing and network functionality, they will require different OS images.
modules/retail/pages/retail-components.adoc:47:The OS images ensure that the different display mechanisms work correctly.
modules/retail/pages/retail-components.adoc:86:{productname} {smr} uses the {saltboot} formula, which defines partitioning and OS images for terminals.
modules/retail/pages/retail-components.adoc:102:The {saltboot} ``initrd`` is created during image building and is required for bootstrapping terminals.
modules/retail/pages/retail-components.adoc:110:The Salt pillar structure that describes how terminals are partitioned and what image is deployed on each terminal.
modules/retail/pages/retail-components.adoc:112:* Images and boot images pillars:
modules/retail/pages/retail-components.adoc:114:When the image building feature in {productname} successfully builds an image that contains the {saltboot} ``initrd``, the image and boot image Salt pillars are created.
modules/retail/pages/dedicated-with-formulas.adoc:8:* one or more POS images built
modules/retail/pages/dedicated-with-formulas.adoc:22:For POS image we assume to have one with name [systemitem]``POS_Image_JeOS7``.
modules/retail/pages/dedicated-with-formulas.adoc:177:== Synchronize images
modules/retail/pages/dedicated-with-formulas.adoc:179:After highstate is applied, we proceed with synchronizing images as usual with apply [systemitem]``image-sync`` state.
modules/retail/pages/retail-install-setup.adoc:4:// 2020-08-27, ke: We must settle on one term: "POS images" or "terminal images"
modules/retail/pages/retail-install-setup.adoc:14:* Prepare POS images
modules/retail/pages/retail-install-setup.adoc:17:* Synchronize POS images to the branch servers
modules/retail/pages/retail-install-setup.adoc:22:For example, the first time you configure the branch server, you will need to have images prepared for synchronization.
modules/retail/pages/retail-install-setup.adoc:23:If you are configuring more than one branch server, you can use the same images across different branch servers.
modules/retail/pages/retail-install-setup.adoc:25:If you have an existing environment, and need to build new images, you do not need to re-initialize the branches.
modules/retail/pages/retail-install-setup.adoc:26:You will need to synchronize the images, and can skip setting up the services on the branch server.
modules/retail/pages/retail-install-setup.adoc:28:Usually, POS images are rebuild when updated packages are available, and synchronized to the branch servers before the update window opens.
modules/retail/pages/retail-install-setup.adoc:32:For information about {productname} image building, see xref:administration:image-management.adoc[].
modules/retail/pages/retail-install-setup.adoc:34:{productname} {smr} POS images are images specifically tailored for {productname} {smr} environment and designed to be deployed using PXE booting mechanism.
modules/retail/pages/retail-install-setup.adoc:60:* SLES{nbsp}11 images need to be activated with the [systemitem]``SLES11 SP3 i586`` and [systemitem]``SLEPOS 11 SP3 i586`` channels
modules/retail/pages/retail-install-setup.adoc:64:Ensure that SLES{nbsp}11 images are built on the SLES{nbsp}11 build host.
modules/retail/pages/retail-install-setup.adoc:67:If you are building images for SLES{nbsp}11 using profiles from an HTTPS git repository that uses TLS 1.0 or greater, it will fail.
modules/retail/pages/retail-install-setup.adoc:132:{saltboot} technology is used to deploy POS images to the terminals.
modules/retail/pages/retail-install-setup.adoc:133:{saltboot} consists of saltboot enabled initrd (build as part of POS images) and saltboot {salt} states.
modules/retail/pages/retail-install-setup.adoc:173:{saltboot} requires some information where the Salt master is and from where to download the image.
modules/retail/pages/retail-install-setup.adoc:200:Before POS image is downloaded to the terminal, download server discovery is done to find where to download image from:
modules/retail/pages/retail-install-setup.adoc:206:Value obtained by download server discovery is then used together with POS image pillar to fetch correct image from correct location.
modules/retail/pages/retail-install-setup.adoc:208:=== Terminal partitioning and image selection
modules/retail/pages/retail-install-setup.adoc:219:The OS image you use on the {productname} server must be synchronized for use to the branch server.
modules/retail/pages/retail-install-setup.adoc:220:You can do this with the Salt [command]``image-sync`` state, part of the [systemitem]``Image Synchronization Formula``.
modules/retail/pages/retail-install-setup.adoc:227:salt <branch_server_minion_id> state.apply image-sync
modules/retail/pages/retail-install-setup.adoc:229:. The image details will be transferred to [path]``/srv/saltboot`` on the branch server.
modules/retail/pages/retail-install-setup.adoc:232:Configure the image synchronization formula to apply the highstate regularly.
modules/retail/pages/retail-install-setup.adoc:233:For more information about [systemitem]``Image Synchronization Formula``, see xref:specialized-guides:salt/salt-formula-imagesync.adoc[].
modules/retail/pages/retail-best-practices.adoc:4:== Deploying new images
modules/retail/pages/retail-best-practices.adoc:6:This file describes how to deploy a new image on selected terminals first, test it, and then deploy it to all terminals.
modules/retail/pages/retail-best-practices.adoc:9:This flexibility allows for testing of new images or configurations. 
modules/retail/pages/retail-best-practices.adoc:11:.Procedure: Dual group image deployment
modules/retail/pages/retail-best-practices.adoc:13:. Build new image.
modules/retail/pages/retail-best-practices.adoc:14:    Use image synchronization formula to synchronize the image to all Branch Servers.
modules/retail/pages/retail-best-practices.adoc:18:    Use the same configuration as in the original hardware type group ([literal]``HWTYPE``), except for the image version. 
modules/retail/pages/retail-best-practices.adoc:19:    Use the name and version of the new image.
modules/retail/pages/retail-best-practices.adoc:21:  * Identify the terminals you want to test the new image on.
modules/retail/pages/retail-best-practices.adoc:26:    They should boot the new image.
modules/retail/pages/retail-best-practices.adoc:29:  * Check if the new image performs as expected and if there are any issues or errors encountered.
modules/retail/pages/retail-best-practices.adoc:31:  * Once you have confirmed that the new image works correctly, the [literal]``HWTYPE`` group can be updated.
modules/retail/pages/retail-best-practices.adoc:32:  * Modify the image version in the [literal]``HWTYPE:POSVendor-Terminal`` group to match the tested and approved version.
modules/retail/pages/retail-best-practices.adoc:33:  * This ensures that all other terminals receive the new image.
modules/retail/pages/retail-best-practices.adoc:36:=== Controlling image versions
modules/retail/pages/retail-best-practices.adoc:38:By default, {saltboot} formula selects the specified image name and version or selects the highest one if the version is not specified.
modules/retail/pages/retail-best-practices.adoc:40:There are multiple methods to control the image version within the [literal]``HWTYPE`` and [literal]``TEST`` groups:
modules/retail/pages/retail-best-practices.adoc:44:** In both the [literal]``HWTYPE`` and [literal]``TEST`` groups, specify explicitly the exact version of the image to be deployed.
modules/retail/pages/retail-best-practices.adoc:45:** Make sure that the specified image version is already synchronized.
modules/retail/pages/retail-best-practices.adoc:46:* Mark new image as [literal]``Inactive``.
modules/retail/pages/retail-best-practices.adoc:47:** In the [literal]``HWTYPE`` group, do not specify the image version.
modules/retail/pages/retail-best-practices.adoc:48:** Mark the new image as [literal]``Inactive`` after building and before synchronizing it to Branch Server.
modules/retail/pages/retail-best-practices.adoc:49:** The [literal]``Inactive`` flag ensures, that the image is not auto-selected when the image version is not specified.
modules/retail/pages/retail-best-practices.adoc:50:** After testing, remove the [literal]``Inactive`` flag so the image can be auto-selected in the [literal]``HWTYPE`` group.
modules/retail/pages/retail-best-practices.adoc:52:   For more information, see xref:retail:retail-image-pillars.adoc[].
modules/retail/pages/retail-best-practices.adoc:54:** In the [literal]``HWTYPE`` group, omit the image version.
modules/retail/pages/retail-best-practices.adoc:55:** Before synchronizing the new image, set the [literal]``Freeze Image`` flag in {saltboot} formula in [literal]``HWTYPE`` group. 
modules/retail/pages/retail-best-practices.adoc:56:   This ensures that the already deployed terminals in this group will keep the old image.
modules/retail/pages/retail-best-practices.adoc:57:** Synchronize and test the new image in the [literal]``TEST`` group.
modules/retail/pages/retail-best-practices.adoc:58:** Reset the [literal]``Freeze Image`` flag in [literal]``HWTYPE`` group, so the terminals in this group will be updated to the new image too.
modules/retail/pages/retail-best-practices.adoc:62:Do not use the whitelist in Image Synchronization formula to control which terminal boots which image. 
modules/retail/pages/retail-install-unified.adoc:27:. Boot your server from the installation image.
modules/retail/pages/retail-install-unified.adoc:32:image::unifiedinstaller-install.png[scaledwidth=80%]
modules/retail/pages/retail-install-unified.adoc:38:image::unifiedinstaller-system_role.png[scaledwidth=80%]
modules/retail/pages/retail-install-unified.adoc:72:. Boot your server from the installation image.
modules/retail/pages/retail-install-unified.adoc:77:image::unifiedinstaller-install_branch.png[scaledwidth=80%]
modules/retail/pages/retail-install-unified.adoc:83:image::unifiedinstaller-system_role_branch.png[scaledwidth=80%]
modules/retail/pages/retail-install-unified.adoc:138:To prepare a build host from an already registered Salt client, see xref:administration:image-management.adoc#at.images.kiwi.buildhost[].
modules/retail/pages/retail-uyuni-branchserver.adoc:75:The activation key for retail terminal images based on openSUSE Leap {opensuse-version} must contain these child channels:
modules/retail/pages/retail-network-arch.adoc:11:image::retail_arch.png[scaledwidth=60%]
modules/retail/pages/retail-network-arch.adoc:16:Branch servers provide services for PXE boot, and act as an image cache, Salt broker, and proxy for software components (RPM packages).
modules/retail/pages/retail-network-arch.adoc:40:image::retail_dedicated_nic.png[scaledwidth=60%]
modules/retail/pages/retail-network-arch.adoc:47:image::retail_external_network.png[scaledwidth=60%]
modules/retail/pages/retail-network-arch.adoc:54:image::retail_shared_network.png[scaledwidth=60%]
modules/retail/pages/retail-requirements.adoc:93:| RAM:                     | Minimum 1 GB for hosts that need to run OS images built with Kiwi (PXE booted or not)
modules/retail/pages/retail-requirements.adoc:94:| Disk Space:              | Disk space depends on size of the OS image
modules/retail/pages/retail-requirements.adoc:112:Booting from a hard disk using UEFI Secure Boot is fully supported on {sles}{nbsp}15 images only.
modules/retail/pages/retail-requirements.adoc:114:You cannot boot {sles}{nbsp}12 images using UEFI secure boot from a hard disk.
modules/retail/pages/shared-central-dns.adoc:8:* one or more POS images built
modules/retail/pages/shared-central-dns.adoc:12:In this example we consider architecture with shared network between POS terminals, branch server and {productname} where branch server provides only PXE configuration and images.
modules/retail/pages/shared-central-dns.adoc:20:For POS image we assume to have one with name [systemitem]``POS_Image_JeOS7``.
modules/retail/pages/shared-central-dns.adoc:133:== Synchronize images
modules/retail/pages/shared-central-dns.adoc:135:After highstate is applied, we proceed with synchronizing images as usual with apply [systemitem]``image-sync`` state.
modules/retail/pages/containerized-saltboot.adoc:19:Containerized workflow requires POS images build using {productname} Server 4.3 or newer.
modules/retail/pages/containerized-saltboot.adoc:20:Older images will not work.
modules/retail/pages/containerized-saltboot.adoc:38:For POS image we assume to have one with name [systemitem]``POS_Image_JeOS7``.
modules/retail/pages/containerized-saltboot.adoc:62:image::saltboot_group.png[scaledwidth=80%]
modules/retail/pages/containerized-saltboot.adoc:74:=== Default boot image
modules/retail/pages/containerized-saltboot.adoc:76:Configure [systemitem]``Default boot image for new registrations`` to specify what boot image should be booted by not yet registered POS terminal.
modules/retail/pages/containerized-saltboot.adoc:77:This is useful when stable boot image is wanted for initial deployments.
modules/retail/pages/containerized-saltboot.adoc:78:Without this setting, newest built boot image is used as default boot image.
modules/retail/pages/containerized-saltboot.adoc:80:If [systemitem]``Default boot image for new registrations`` is set, option to set its version appears under name [systemitem]``Default boot image version`` where specific image version can be set.
modules/retail/pages/containerized-saltboot.adoc:99:Containerized workflow relies on updated image building in {productname} Server 4.3 where PXE images are no longer collected as bundle, but kernel, initrd and filesystem image are collected individually.
modules/retail/pages/containerized-saltboot.adoc:103:Containerized proxy is not a Salt client, it is not possible to call [systemitem]``image-sync`` state.
modules/retail/pages/containerized-saltboot.adoc:107:Once POS image is build and made available on {productname} Server, it is immediately available to the {saltboot} clients as well. 
modules/retail/pages/containerized-saltboot.adoc:109:This may have implications on how images are deployed to production.
modules/retail/pages/containerized-saltboot.adoc:117:. Build POS image
modules/retail/pages/containerized-saltboot.adoc:125:. Build POS image
modules/retail/pages/containerized-saltboot.adoc:129:. Apply [systemitem]``image-sync`` state on configured {productname} {smr} Branch server
modules/retail/pages/containerized-saltboot.adoc:137:When new PXE image is built (such as {productname} {smr} POS_Image_JeOS images) [systemitem]``cobbler distro`` and [systemitem]``cobbler profile`` are automatically generated for this image.
modules/retail/pages/containerized-saltboot.adoc:139:For example when first image [literal]``POS_Image_JeOS`` version [literal]``7.0.0`` is build under organization with number 1 [command]``cobbler list`` will show:
modules/retail/pages/containerized-saltboot.adoc:154:Only when [systemitem]``Saltboot group`` is created, new {cobbler} profile is created for this [systemitem]``Saltboot group`` which points to [systemitem]``cobbler distro`` based on default boot image configuration.
modules/retail/pages/retail-deploy-terminals-other.adoc:5:If you are not able to boot terminals from the network, you can create a live USB image and deploy terminals using a removable USB storage device.
modules/retail/pages/retail-deploy-terminals-other.adoc:10:Hardware type groups must be created and images must be synchronized before continuing.
modules/retail/pages/retail-deploy-terminals-other.adoc:23:If you do not want to boot terminals from the network, you can create a live USB image and deploy terminals using a removable USB storage device.
modules/retail/pages/retail-deploy-terminals-other.adoc:26:You can prepare a bootable USB device with the image and tools required to deploy a POS terminal using a remote {productname} {smr} branch server.
modules/retail/pages/retail-deploy-terminals-other.adoc:37:. On the {productname} {smr} branch server, at the command prompt, as root, create the POS image.
modules/retail/pages/retail-deploy-terminals-other.adoc:39:You need to specify the size of the image, in megabytes.
modules/retail/pages/retail-deploy-terminals-other.adoc:44:salt-call image_sync_usb.create <usb image name> <size in MB>
modules/retail/pages/retail-deploy-terminals-other.adoc:46:. Insert the USB device into the {productname} {smr} branch server machine, and copy the image to the new location:
modules/retail/pages/retail-deploy-terminals-other.adoc:49:dd bs=1M if=<usb image name> of=<path to usb device>
modules/retail/pages/retail-deploy-terminals-other.adoc:53:When you have the image on the USB drive, check that the terminals you want to deploy allow local booting.
modules/retail/pages/retail-deploy-terminals-other.adoc:76:Bootstrapping across a wireless network could expose a security risk if you are using encrypted OS images.
modules/retail/pages/retail-deploy-terminals-other.adoc:77:The boot ``initrd`` image and the partition that contains ``/etc/salt`` must be stored unencrypted on the terminal.
modules/retail/pages/retail-deploy-terminals-other.adoc:84:Ensure that the OS image you use to create the USB device has the ``dracut-wireless`` package included.
modules/retail/pages/retail-deploy-terminals-other.adoc:90:* Directly during image build.
modules/retail/pages/retail-deploy-terminals-other.adoc:96:. Ensure that the ``dracut-wireless`` package is included  in the image template.
modules/retail/pages/retail-deploy-terminals-other.adoc:97:. Set the wireless credentials by creating or editing the ``etc/sysconfig/network/ifcfg-wlan0`` file to the image template, with these details:
modules/retail/pages/retail-deploy-terminals-other.adoc:105:. Build the image.
modules/retail/pages/retail-deploy-terminals-other.adoc:106:. Prepare a USB device using this image, and boot the terminal.
modules/retail/pages/retail-deploy-terminals-other.adoc:149:. Rebuild the boot image with updated credentials.
modules/retail/pages/retail-deploy-terminals-other.adoc:150:. Recreate the bootable USB device based on the new boot image.
modules/retail/pages/retail-deploy-terminals-other.adoc:196:    This Salt state is applied by {saltboot} after the system image is deployed.
modules/retail/pages/retail-deploy-terminals-auto.adoc:19:  To do this, include the configuration file in the image source before the client image is built.
modules/retail/pages/retail-deploy-terminals-auto.adoc:68:. In the location where the image source is built, such as a build host or source repository, create a configuration file called [path]``etc/salt/minion.d/autosign-grains.conf``.
modules/retail/pages/retail-deploy-terminals-auto.adoc:86:. In the location where the image source is built, such as a build host or source repository, create a configuration file called [path]``etc/salt/minion.d/autosign-grains.conf``.
modules/retail/pages/retail-deploy-terminals-auto.adoc:109:  In the [literal]``<packages type="image">`` element, add:
modules/retail/pages/retail-deploy-terminals-auto.adoc:115:. Save the file and rebuild the image.
modules/retail/pages/retail-deploy-terminals.adoc:8:. Synchronize images to the branch server
modules/retail/pages/retail-deploy-terminals.adoc:9:. Deploy images to the terminals
modules/retail/pages/retail-deploy-terminals.adoc:21:Before terminals can be deployed, ensure you have prepared a {saltboot}-based operating system image.
modules/retail/pages/retail-deploy-terminals.adoc:22:For more information about building OS images, see xref:administration:image-management.adoc[].
modules/retail/pages/retail-deploy-terminals.adoc:34:To tell {productname} what image to deploy on each terminal, you can set hardware type groups.
modules/retail/pages/retail-deploy-terminals.adoc:88:salt <branch_server_salt_id> state.apply image-sync
modules/retail/pages/retail-deploy-terminals.adoc:93:=== Using a {sles}11 SP3 32-bit based images
modules/retail/pages/retail-deploy-terminals.adoc:95:If you have 32-bit machines included in your branch, then you must use a 32-bit boot image as a default boot image.
modules/retail/pages/retail-deploy-terminals.adoc:99:If a 32-bit boot image is not used as a default boot image, 32-bit terminals will be unable to boot and operate properly.
modules/retail/pages/retail-deploy-terminals.adoc:102:Check the available boot images and their architecture from the command line:
modules/retail/pages/retail-deploy-terminals.adoc:105:salt <branch_server_salt_id> pillar.item boot_images
modules/retail/pages/retail-deploy-terminals.adoc:122:In this example, the [systemitem]``legacy-6.0.0`` boot image is 32-bit.
modules/retail/pages/retail-deploy-terminals.adoc:124:You can set the default boot image in the ``Image Synchronization`` formula on the branch server, by adding the chosen boot image name to the [guimenu]``Default boot image`` field.
modules/retail/pages/retail-deploy-terminals.adoc:125:For more information about ``Image Synchronization`` formula, see xref:specialized-guides:salt/salt-formula-imagesync.adoc[].
modules/retail/pages/retail-deploy-terminals.adoc:127:image::retail_imagesync_formula.png[scaledwidth=80%]
modules/retail/pages/retail-deploy-terminals.adoc:133:When you have your bootstrap image ready, you can deploy the image to the terminals.
modules/retail/pages/retail-deploy-terminals.adoc:146:Two Salt pillars allow you to change the protocol and server used to download the image.
modules/retail/pages/retail-deploy-terminals.adoc:148:* The ``saltboot_download_protocol`` pillar specifies which protocol should be used to download the image to the terminal.
modules/retail/pages/retail-deploy-terminals.adoc:149:  This overrides the default protocol specified in the image pillar.
modules/retail/pages/retail-deploy-terminals.adoc:151:* The ``saltboot_download_server`` pillar specifies which server to use to download the image.
modules/retail/pages/retail-deploy-terminals.adoc:152:  This overrides the default hostname specified in the image pillar.
modules/retail/pages/retail-deploy-terminals.adoc:197:In this example, the download server must be prepared by the ``image_sync`` state before you begin.
modules/retail/pages/retail-install-uyuni.adoc:29:repo=${repo}Uyuni:/Stable/images/repo/Uyuni-Server-POOL-x86_64-Media1/
modules/retail/pages/retail-mass-config-yaml.adoc:55:                  image: POS_Image_JeOS6
modules/retail/pages/retail-mass-config-yaml.adoc:78:              image: POS_Image_JeOS6
modules/retail/pages/retail-mass-config-yaml.adoc:94:              image: POS_Image_JeOS6
modules/retail/pages/dedicated-with-scripts.adoc:8:* one or more POS images built
modules/retail/pages/dedicated-with-scripts.adoc:22:For POS image we assume to have one with name [systemitem]``POS_Image_JeOS7``.
modules/retail/pages/dedicated-with-scripts.adoc:126:== Synchronize images
modules/retail/pages/dedicated-with-scripts.adoc:128:After highstate is applied, we proceed with synchronizing images as usual with apply [systemitem]``image-sync`` state.
modules/retail/pages/retail-formulas-intro.adoc:28:Optionally, you can also enable the image synchronization formula.
modules/retail/pages/retail-formulas-intro.adoc:29:For more information, see xref:specialized-guides:salt/salt-formula-imagesync.adoc[].
modules/retail/pages/retail-formulas-intro.adoc:53:Use the {saltboot} formula to specify disk partitioning, and to select which image should be deployed.
modules/retail/pages/retail-image-pillars.adoc:1:[[retail-image-pillars]]
modules/retail/pages/retail-image-pillars.adoc:4:If the built image type is [literal]``PXE``, a {salt} pillar is also generated.
modules/retail/pages/retail-image-pillars.adoc:6:Image pillars are stored in the database and {salt} subsystem can access details about the generated image.
modules/retail/pages/retail-image-pillars.adoc:7:Details include where the image files are located and provided, image checksums, information needed for network boot, and more.
modules/retail/pages/retail-image-pillars.adoc:11:This is an example of image pillar:
modules/retail/pages/retail-image-pillars.adoc:14:  "images": {
modules/retail/pages/retail-image-pillars.adoc:17:        "url": "https://ftp/saltboot/image/POS_Image_JeOS7.x86_64-7.1.0-1/POS_Image_JeOS7.x86_64-7.1.0",
modules/retail/pages/retail-image-pillars.adoc:22:          "url": "https://manager.example.com/os-images/1/POS_Image_JeOS7-7.1.0-1/POS_Image_JeOS7.x86_64-7.1.0",
modules/retail/pages/retail-image-pillars.adoc:24:          "local_path": "image/POS_Image_JeOS7.x86_64-7.1.0-1"
modules/retail/pages/retail-image-pillars.adoc:30:        "boot_image": "POS_Image_JeOS7-7.1.0-1"
modules/retail/pages/retail-image-pillars.adoc:34:  "boot_images": {
modules/retail/pages/retail-image-pillars.adoc:39:        "initrd_url": "https://manager.example.com/os-images/1/POS_Image_JeOS7-7.1.0-1/POS_Image_JeOS7.x86_64-7.1.0.initrd",
modules/retail/pages/retail-image-pillars.adoc:40:        "kernel_url": "https://manager.example.com/os-images/1/POS_Image_JeOS7-7.1.0-1/POS_Image_JeOS7.x86_64-7.1.0-5.14.21-150400.24.55-default.kernel",
modules/retail/pages/retail-image-pillars.adoc:63:Under the [literal]``Images`` section, there is a specific image called [literal]``POS_Image_JeOS7`` with a version [literal]``7.1.0-1.`` 
modules/retail/pages/retail-image-pillars.adoc:64:It provides various details such as the image URL for download, architecture, hash, size, synchronization information, image type (in this case, [literal]``PXE``), file system type, file name, and an inactive flag to exclude it from auto-selection. 
modules/retail/pages/retail-image-pillars.adoc:65:Additionally, it references the corresponding boot image named [literal]``POS_Image_JeOS7-7.1.0-1.``
modules/retail/pages/retail-image-pillars.adoc:67:The [literal]``boot_images`` section contains information about the boot image [literal]``POS_Image_JeOS7-7.1.0-1.`` 
modules/retail/pages/retail-image-pillars.adoc:71:This example retrieves the image pillar for a given image ID, and changes the [literal]``Inactive`` flag to [literal]``True`` and writes it back.
modules/retail/pages/retail-image-pillars.adoc:87:pillar = client.image.getPillar(key, IMAGE_ID)
modules/retail/pages/retail-image-pillars.adoc:88:[(name, version_dict)] = pillar['images'].items()
modules/retail/pages/retail-image-pillars.adoc:89:[(version, image_data)] = version_dict.items()
modules/retail/pages/retail-image-pillars.adoc:90:image_data['inactive'] = True
modules/retail/pages/retail-image-pillars.adoc:91:client.image.setPillar(key, IMAGE_ID, pillar)
modules/retail/pages/retail-offline.adoc:12:If the {productname} Server is offline, and a terminal is rebooted, it will fall back to a previously installed image.
modules/retail/pages/retail-offline.adoc:33:If the bandwidth between the branch server and the terminal is low, or for optimization of the terminal update process, POS images can be cached in advance on the terminal.
modules/retail/pages/retail-offline.adoc:37:This partition must be created before the system partition and large enough to store a POS image.
modules/retail/pages/retail-offline.adoc:41:When the service partition is set up on the terminal, a POS image can be downloaded in advance by applying the `saltboot.cache_image` state:
modules/retail/pages/retail-offline.adoc:44:salt $TERMINALID state.apply saltboot.cache_image
modules/retail/pages/retail-offline.adoc:47:This can be done regularly to ensure that terminals always have an uptodate POS image downloaded.
modules/retail/pages/retail-offline.adoc:49:When the terminal is rebooted and an uptodate POS image is found in the service partition, the terminal will automatically use this cached image for system redeployment.
modules/retail/pages/retail-saltboot-diagram.adoc:8:image::saltboot-sequence.png[scaledwidth=80%]
modules/retail/pages/retail-uyuni-server-setup.adoc:147:         <package name="rhn-org-trusted-ssl-cert-osimage"/>
modules/retail/pages/retail-uyuni-server-setup.adoc:152:Then it is possible to build the image using modified kiwi profile and deploy it to terminal as usual (there is
modules/retail/pages/retail-uyuni-server-setup.adoc:155:The rest of things ({saltboot} formula and formula for image syncing works just the same way as SUMA.)



modules/common-workflows/_attributes.adoc:3::imagesdir: {moduledir}/assets/images
Binary file modules/common-workflows/assets/images/new-upgradesles01.png matches
Binary file modules/common-workflows/assets/images/new-upgradesles03.png matches
modules/common-workflows/pages/workflow-TEMPLATE.txt:49:image::imagename.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-client-onboarding.adoc:83:image::scc_sync.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-client-onboarding.adoc:87:image::add_products.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-client-onboarding.adoc:98:image::activationkey_base.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-client-onboarding.adoc:109:image::bootstrap.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-configuration-management.adoc:47:image::new_state.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-configuration-management.adoc:57:image::assign_client_cfg.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-content-lifecycle-management.adoc:41:image::clm_new_project.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-content-lifecycle-management.adoc:47:image::clm_add_sources.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-content-lifecycle-management.adoc:56:image::clm_environments.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-content-lifecycle-management.adoc:59:image::clm_build_1.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-content-lifecycle-management.adoc:68:image::clm_assign.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-content-lifecycle-management.adoc:77:image::clm_promote.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-inplace-sles-upgrade.adoc:38:image::wf-inplaceMigration-01.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-inplace-sles-upgrade.adoc:42:image::wf-inplaceMigration-02.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-inplace-sles-upgrade.adoc:56:image::wf-inplaceMigration-03.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-inplace-sles-upgrade.adoc:71:image::wf-inplaceMigration-04.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-inplace-sles-upgrade.adoc:75:image::wf-inplaceMigration-05.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-inplace-sles-upgrade.adoc:142:image::wf-inplaceMigration-06.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-inplace-sles-upgrade.adoc:144:image::wf-inplaceMigration-07.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-inplace-sles-upgrade.adoc:153:image::wf-inplaceMigration-08.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-inplace-sles-upgrade.adoc:155:image::wf-inplaceMigration-09.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-product-upgrade-webui.adoc:24:image::new-upgradesles01.png[scaledwidth=80%]
modules/common-workflows/pages/workflow-product-upgrade-webui.adoc:33:image::new-upgradesles03.png[scaledwidth=80%]

modules/installation-and-upgrade/_attributes.adoc:3::imagesdir: {moduledir}/assets/images
Binary file modules/installation-and-upgrade/assets/images/proxy-bootstrapGUI.png matches
Binary file modules/installation-and-upgrade/assets/images/proxy-child.png matches
Binary file modules/installation-and-upgrade/assets/images/proxy-key.png matches
Binary file modules/installation-and-upgrade/assets/images/sles15-proxy-channels.png matches
modules/installation-and-upgrade/pages/connect-payg.adoc:6:* provides customized {payg} product images for SLES, SLES for SAP, etc.
modules/installation-and-upgrade/pages/connect-payg.adoc:16:* The {payg} instance is launched from the correct SUSE product image (for example, SLES, SLES for SAP, or SLE HPC) to allow access to the desired repositories
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:4:It is possible to deploy containerized images in an environment without an internet connection.
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:5:In such case, the images can be copied from {suse} registry to an internal registry, or saved to a [literal]``tar`` file.
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:9:[[image.from.suse.to.internal.registry]]
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:16:.Procedure: Deploying {salt} Proxy from an internal image registry
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:30:. Copy images between registries:
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:33:for image in httpd salt-broker squid ssh tftpd; do
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:34:    skopeo copy docker://registry.suse.com/suse/manager/4.3/proxy-$image:latest docker://<your_server>/registry.suse.com/suse/manager/4.3/proxy-$image
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:50:. Before starting the pod, point the Podman where to get the [literal]``pause`` image from on the internal registry:
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:53:echo -e '[engine]\ninfra_image = "<your_server>/pause:latest"'>>/etc/containers/containers.conf
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:56:. To start using the images from the internal registry please adapt the [literal]``NAMESPACE`` value in file `/etc/sysconfig/uyuni-proxy-systemd-services.config`.
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:67:This example illustrates deployment of containerized image on a machine with no access to internet.
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:73:. Before starting the pod, point the Podman where to get the [literal]``pause`` image from on the internal registry:
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:76:echo -e '[engine]\ninfra_image = "<your_server>/pause:latest"'>>/etc/containers/containers.conf
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:87:for image in httpd salt-broker squid ssh tftpd; do
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:88:    podman pull registry.suse.com/suse/manager/4.3/proxy-$image
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:92:podman save -m -o proxy-images.tar \
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:106:. Transfer the [literal]``proxy-images.tar`` to the air-gapped proxy.
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:107:. To make images available to be started when needed, run the command:
modules/installation-and-upgrade/pages/containerized-proxy-deployment.adoc:110:podman load -i proxy-images.tar
modules/installation-and-upgrade/pages/install-proxy-uyuni.adoc:17:repo=${repo}Uyuni:/Stable/images/repo/Uyuni-Proxy-POOL-x86_64-Media1/
modules/installation-and-upgrade/pages/install-uyuni.adoc:25:repo=${repo}Uyuni:/Stable/images/repo/Uyuni-Server-POOL-x86_64-Media1/
modules/installation-and-upgrade/pages/ports.adoc:9:This image shows the main ports used in {productname}:
modules/installation-and-upgrade/pages/ports.adoc:11:image::ports_diagram.png[]
modules/installation-and-upgrade/pages/proxy-container-setup.adoc:45:image::suma_proxy_containerized_webui.png[scaledwidth=80%]
modules/installation-and-upgrade/pages/proxy-y-z.adoc:16:When upgrading {productname} Proxy 4.2 based on JeOS image, before proceding with the migration, please uninstall the `kernel-default-base` package.
modules/installation-and-upgrade/pages/proxy-y-z.adoc:24:// FIXME: Update images
modules/installation-and-upgrade/pages/proxy-y-z.adoc:27:image::proxy-spmigration1.png[]
modules/installation-and-upgrade/pages/proxy-y-z.adoc:30:image::proxy-spmigration2.png[]
modules/installation-and-upgrade/pages/install-proxy.adoc:18:| Installation Method: | Local install media (ISO image or CDROM)
modules/installation-and-upgrade/pages/install-proxy.adoc:47:. Click btn:[Local install media (ISO image or CDROM)].
modules/installation-and-upgrade/pages/install-proxy.adoc:49:. In the [guimenu]``Create a new virtual machine`` dialog, click btn:[Browse] and locate the full SLES image you downloaded from your SCC account.
modules/installation-and-upgrade/pages/server-setup.adoc:52:image::quickstart-mgr-setup4-ncurses.png[scaledwidth=80%]
modules/installation-and-upgrade/pages/server-setup.adoc:60:image::quickstart-mgr-setup5-ncurses.png[scaledwidth=80%]
modules/installation-and-upgrade/pages/server-setup.adoc:119:image::quickstart-mgr-setup-admin1.png[scaledwidth=80%]
modules/installation-and-upgrade/pages/server-setup.adoc:167:image::admin_suse_products.png[scaledwidth=80%]
modules/installation-and-upgrade/pages/uyuni-server-setup.adoc:145:image::admin_suse_products.png[scaledwidth=80%]
modules/installation-and-upgrade/pages/install-server-unified.adoc:15:* In case of installing {susemgr} in a public cloud where {susemgr} image is available, use that image.
modules/installation-and-upgrade/pages/install-server-unified.adoc:17:* In case of installing {susemgr} in a public cloud where a {susemgr} image is not available, it is possible to start from a {sles}{nbsp}{sles-version}{nbsp}{sp-base} and switch the base product to {susemgr}{nbsp}{productnumber}.
modules/installation-and-upgrade/pages/install-server-unified.adoc:34:// image::unifiedinstaller-install.png[scaledwidth=80%]
modules/installation-and-upgrade/pages/install-server-unified.adoc:38:// image::unifiedinstaller-registration.png[scaledwidth=80%]
modules/installation-and-upgrade/pages/install-server-unified.adoc:43:// image::unifiedinstaller-extensions.png[scaledwidth=80%]
modules/installation-and-upgrade/pages/install-server-unified.adoc:49:// image::unifiedinstaller-addon.png[scaledwidth=80%]
modules/installation-and-upgrade/pages/install-server-unified.adoc:52:// image::unifiedinstaller-systemrole.png[scaledwidth=80%]
modules/installation-and-upgrade/pages/install-vm.adoc:25:Find the {minimalsles} image at https://download.suse.com/.
modules/installation-and-upgrade/pages/install-vm.adoc:57:. Create a new virtual machine using the downloaded {minimal} KVM image and select [guimenu]``Import existing disk image``.
modules/installation-and-upgrade/pages/install-vm.adoc:68:Also consider to create a separate partition for [path]``/srv`` where Kiwi images are stored.
modules/installation-and-upgrade/pages/install-vm.adoc:80:. Click btn:[Begin Installation] to boot the new VM from the {minimalsles} image.
modules/installation-and-upgrade/pages/install-vm.adoc:155:Also consider to create a separate partition for [path]``/srv`` where Kiwi images are stored.
modules/installation-and-upgrade/pages/install-proxy-unified.adoc:34:. To boot the {unifiedinstaller} from the installation image, you might need to adjust the boot order in the BIOS.
modules/installation-and-upgrade/pages/install-proxy-unified.adoc:37:// image::unifiedinstaller-install.png[scaledwidth=80%] (this image is with server selected.
modules/installation-and-upgrade/pages/install-proxy-unified.adoc:40:// image::unifiedinstaller-proxy.png[scaledwidth=80%]
modules/installation-and-upgrade/pages/proxy-setup.adoc:281:If you need to distribute big files such as ISO images to your network through the proxy, go to PROXY_HOSTNAME system and copy the big files to the [guimenu]``/srv/www/htdocs/pub`` directory.
modules/installation-and-upgrade/pages/proxy-uyuni.adoc:77:// FIXME: Update images
modules/installation-and-upgrade/pages/proxy-uyuni.adoc:80:image::proxy-spmigration1.png[]
modules/installation-and-upgrade/pages/proxy-uyuni.adoc:83:image::proxy-spmigration2.png[]
modules/installation-and-upgrade/pages/webui-setup.adoc:146:| image:spacewalk-icon-enhancement.svg[] 
modules/installation-and-upgrade/pages/pubcloud-requirements.adoc:65:The cloud images for {productname} Server use a script to assign this separate volume when your instance is launched.
modules/installation-and-upgrade/pages/proxy-container-installation.adoc:125:It is possible to modify the tag to use for container images with the [literal]``--tag=latest`` parameter to the install command.
modules/installation-and-upgrade/pages/proxy-container-installation.adoc:129:Changing the containers images and version parameters is dangerous and can cause a non-functional system.
modules/installation-and-upgrade/pages/proxy-container-installation.adoc:134:=== Using a custom container image for a service
modules/installation-and-upgrade/pages/proxy-container-installation.adoc:136:By default, the {productname} Proxy suite is set to use the same image version and registry path for each of its services.
modules/installation-and-upgrade/pages/proxy-container-installation.adoc:137:However, it is possible to override the default values for a specific service using the install parameters ending with [literal]``-tag`` and [literal]``-image``.
modules/installation-and-upgrade/pages/proxy-container-installation.adoc:142:mgrpxy install podman --httpd-tag 0.1.0 --httpd-image registry.opensuse.org/uyuni/proxy-httpd /path/to/config.tar.gz
modules/installation-and-upgrade/pages/proxy-container-installation.adoc:145:It adjusts the configuration file for the httpd service, where [path]``registry.opensuse.org/uyuni/proxy-httpds`` is the image to use and [literal]``0.1.0`` is the version tag, before restarting it.
modules/installation-and-upgrade/pages/proxy-registration.adoc:26:image::proxy-key.png[]
modules/installation-and-upgrade/pages/proxy-registration.adoc:46:image::proxy-child.png[]
modules/installation-and-upgrade/pages/proxy-registration.adoc:54:image::proxy-bootstrap.png[]
modules/installation-and-upgrade/pages/proxy-registration.adoc:61:image::proxy-bootstrapGUI.png[]
modules/installation-and-upgrade/pages/proxy-registration.adoc:69:image::sles15-proxy-channels.png[]



modules/quickstart/_attributes.adoc:3::imagesdir: {moduledir}/assets/images
Binary file modules/quickstart/assets/images/proxy-bootstrapGUI.png matches
Binary file modules/quickstart/assets/images/proxy-child.png matches
Binary file modules/quickstart/assets/images/proxy-key.png matches
Binary file modules/quickstart/assets/images/sles15-proxy-channels.png matches
modules/quickstart/pages/install-uyuni-server.adoc:49:repo=${repo}Uyuni:/Stable/images/repo/Uyuni-Server-POOL-x86_64-Media1/
modules/quickstart/pages/quickstart-install-suma-server.adoc:31:image::unifiedinstaller-install.png[scaledwidth=80%]
modules/quickstart/pages/quickstart-install-suma-server.adoc:35:image::unifiedinstaller-registration.png[scaledwidth=80%]
modules/quickstart/pages/quickstart-install-suma-server.adoc:39:image::unifiedinstaller-extensions.png[scaledwidth=80%]
modules/quickstart/pages/quickstart-install-suma-server.adoc:45:image::unifiedinstaller-addon.png[scaledwidth=80%]
modules/quickstart/pages/quickstart-install-suma-server.adoc:48:image::unifiedinstaller-systemrole.png[scaledwidth=80%]
modules/quickstart/pages/quickstart-install-suma-server.adoc:73:image::quickstart-mgr-setup4-ncurses.png[scaledwidth=80%]
modules/quickstart/pages/quickstart-install-suma-server.adoc:77:image::quickstart-mgr-setup5-ncurses.png[scaledwidth=80%]
modules/quickstart/pages/quickstart-install-suma-server.adoc:98:image::quickstart-mgr-setup-admin1.png[scaledwidth=80%]
modules/quickstart/pages/quickstart-install-suma-server.adoc:129:image::admin_suse_products.png[scaledwidth=80%]
modules/quickstart/pages/quickstart-install-suma-proxy.adoc:24:. To boot the {unifiedinstaller} from the installation image, you might need to adjust the boot order in the BIOS.
modules/quickstart/pages/quickstart-install-suma-proxy.adoc:27:// image::unifiedinstaller-install.png[scaledwidth=80%] (this image is with server selected.
modules/quickstart/pages/quickstart-install-suma-proxy.adoc:30:image::unifiedinstaller-proxy.png[scaledwidth=80%]
modules/quickstart/pages/quickstart-install-suma-proxy.adoc:59:image::proxy-key.png[]
modules/quickstart/pages/quickstart-install-suma-proxy.adoc:73:image::proxy-child.png[]
modules/quickstart/pages/quickstart-install-suma-proxy.adoc:79:image::proxy-bootstrap.png[]
modules/quickstart/pages/quickstart-install-suma-proxy.adoc:84:image::proxy-bootstrapGUI.png[]
modules/quickstart/pages/quickstart-install-suma-proxy.adoc:89:image::sles15-proxy-channels.png[]
modules/quickstart/pages/quickstart-install-uyuni-server.adoc:49:repo=${repo}Uyuni:/Stable/images/repo/Uyuni-Server-POOL-x86_64-Media1/




modules/specialized-guides/_attributes.adoc:3::imagesdir: {moduledir}/assets/images
modules/specialized-guides/pages/large-deployments/multi-server.adoc:10:image::typical-hub-architecture-overview.svg[scaledwidth=80%]
modules/specialized-guides/pages/large-deployments/retail-large-scale.adoc:17:In most cases, different terminals will require a different operating system (OS) image to ensure they work correctly.
modules/specialized-guides/pages/large-deployments/retail-large-scale.adoc:19:While both of these terminals require similar processing and network functionality, they will require different OS images.
modules/specialized-guides/pages/large-deployments/retail-large-scale.adoc:20:The OS images ensure that the different display mechanisms work correctly.
modules/specialized-guides/pages/large-deployments/tuning.adoc:54:image::parameter_graph.svg[Tuning dependency graph]
modules/specialized-guides/pages/qs-sap/configure.adoc:55:image::suma_sap_hana_formula.png[scaledwidth=80%]
modules/specialized-guides/pages/qs-sap/configure.adoc:66:image::suma_sap_formulas.png[scaledwidth=80%]
modules/specialized-guides/pages/qs-sap/configure.adoc:75:image::suma_sap_cluster_formula.png[scaledwidth=80%]
modules/specialized-guides/pages/salt/salt-formula-imagesync.adoc:1:[[image-sync-formula]]
modules/specialized-guides/pages/salt/salt-formula-imagesync.adoc:4:The Image Synchronization formula is used to configure when OS images are synchronized to the branch server, and to specify which images to synchronize.
modules/specialized-guides/pages/salt/salt-formula-imagesync.adoc:6:If this formula is not enabled, synchronization must be started manually, and all images will be synchronized.
modules/specialized-guides/pages/salt/salt-formula-imagesync.adoc:14:* Check the [guimenu]``Include Image Synchronization in Highstate`` field to have image synchronization occur every time highstate is applied.
modules/specialized-guides/pages/salt/salt-formula-imagesync.adoc:15:    This ensures that you do not have to perform image synchronization manually, however it requires a high bandwidth environment.
modules/specialized-guides/pages/salt/salt-formula-imagesync.adoc:16:* In the [guimenu]``Synchronize only the listed images`` field, click btn:[Add item] to add the images you want to have synchronized automatically.
modules/specialized-guides/pages/salt/salt-formula-imagesync.adoc:17:    Alternatively, you can leave this list blank to have all images synchronized.
modules/specialized-guides/pages/salt/salt-formula-imagesync.adoc:24:The Image Synchronization state does not delete cached images.
modules/specialized-guides/pages/salt/salt-formula-yomi.adoc:29:When the formula package is installed, you need to install the PXE Yomi image on the client, boot the client you want to provision, and enable the Yomi formulas on the client.
modules/specialized-guides/pages/salt/salt-formula-yomi.adoc:117:* In the [guimenu]``Image URL`` field, type the location of the operating system ISO image to use.
modules/specialized-guides/pages/salt/salt-formula-saltboot.adoc:4:The {saltboot} formula is used to configure disk images and partitioning for the selected hardware type.
modules/specialized-guides/pages/salt/salt-formula-saltboot.adoc:59:* In the [guimenu]``OS Image to deploy`` field, enter the name of the image to deploy.
modules/specialized-guides/pages/salt/salt-ssh.adoc:200:This image provides an overview of the Salt SSH bootstrap process.
modules/specialized-guides/pages/salt/salt-ssh.adoc:205:image::salt-ssh-bootstrap-process.png[]
modules/specialized-guides/pages/salt/salt-ssh.adoc:206:// This image needs some exposition, at the very least. --LKB 2020-06-16
modules/specialized-guides/pages/salt/salt-ssh.adoc:214:image::salt-ssh-proxy-multi-hop.png[]
modules/specialized-guides/pages/salt/salt-ssh.adoc:225:This image depicts a client connecting to a server that is behind a gateway.
modules/specialized-guides/pages/salt/salt-ssh.adoc:228:image::salt-ssh-proxycommand.png[]
modules/specialized-guides/pages/salt/salt-ssh.adoc:246:image::salt-ssh-push-push-plain-sequence.png[]
modules/specialized-guides/pages/salt/salt-ssh.adoc:264:image::salt-ssh-push-push-tunnel-sequence.png[]
modules/specialized-guides/pages/salt/salt-ssh.adoc:281:image::salt-ssh-push-ssh-keys.png[]
modules/specialized-guides/pages/salt/salt-ssh.adoc:294:image::salt-ssh-push-repo-access.png[]
modules/specialized-guides/pages/salt/salt-ssh.adoc:298:image::salt-ssh-push-tunnel-repo-access.png[]
modules/specialized-guides/pages/salt/salt-yomi.adoc:12:* The operating system image, which includes the pre-configured ``salt-minion`` service.
modules/specialized-guides/pages/salt/salt-yomi.adoc:24:* Boot the new client using the PXE boot image for Yomi.
modules/specialized-guides/pages/salt/salt-yomi.adoc:30:To boot from USB or DVD image, you need at least 512{nbsp}MB.
modules/specialized-guides/pages/salt/salt-yomi.adoc:74:To provision a new client, you need an operating system image to boot from.
modules/specialized-guides/pages/salt/salt-yomi.adoc:75:You can use any image that contains a ``salt-minion`` service enabled, together with a minimal set of tools that are required during the installation, for example ``parted`` or ``btrfstools``.
modules/specialized-guides/pages/salt/salt-yomi.adoc:77:Yomi provides an already prepared image, based on openSUSE Tumbleweed, openSUSE Leap (for {uyuni}), or SLE (for {susemgr}).
modules/specialized-guides/pages/salt/salt-yomi.adoc:78:For {productname}, the image is packaged as an RPM.
modules/specialized-guides/pages/salt/salt-yomi.adoc:79:This is done in a similar way to how ``pxe-default-image`` is distributed.
modules/specialized-guides/pages/salt/salt-yomi.adoc:81:The package installs a standard PXE OEM image generated by Kiwi, the initial kernel and initrd in the [path]``/srv/pxe-yomi-image/`` directory, and the second stage kernel, initrd and image in the [path]``/srv/pxe-yomi-image/image`` directory.
modules/specialized-guides/pages/salt/salt-yomi.adoc:89:. On the {productname} Server, at the command prompt, as root, install the ``pxe-yomi-image`` service:
modules/specialized-guides/pages/salt/salt-yomi.adoc:92:zypper in pxe-yomi-image-sle15
modules/specialized-guides/pages/salt/salt-yomi.adoc:99:. On the {productname} Server, at the command prompt, as root, install the ``pxe-yomi-image`` service:
modules/specialized-guides/pages/salt/salt-yomi.adoc:102:zypper in pxe-yomi-image-opensuse15
modules/specialized-guides/pages/salt/salt-yomi.adoc:113:{productname} uses {cobbler} to manage the PXE boot service, so you will need to register the image in {cobbler}.
modules/specialized-guides/pages/salt/salt-yomi.adoc:119:. On the {productname} Server, at the command prompt, as root, create a directory for the Yomi image:
modules/specialized-guides/pages/salt/salt-yomi.adoc:122:mkdir /srv/tftpboot/pxe-yomi-image
modules/specialized-guides/pages/salt/salt-yomi.adoc:124:. Define a distribution in {cobbler}, including the path to install the second stage kernel and initrd, the location of the full image, and any further kernel options.
modules/specialized-guides/pages/salt/salt-yomi.adoc:131:  --name=pxe-yomi-image \
modules/specialized-guides/pages/salt/salt-yomi.adoc:132:  --kernel=/srv/pxe-yomi-image/linux \
modules/specialized-guides/pages/salt/salt-yomi.adoc:133:  --initrd=/srv/pxe-yomi-image/initrd \
modules/specialized-guides/pages/salt/salt-yomi.adoc:134:  --boot-files='/srv/tftpboot/pxe-yomi-image/image.initrd=/srv/pxe-yomi-image/image/pxe-yomi-image-sle15.x86_64-1.0.0.initrd /srv/tftpboot/pxe-yomi-image/image.kernel=/srv/pxe-yomi-image/image/pxe-yomi-image-sle15.x86_64-1.0.0.kernel /srv/tftpboot/pxe-yomi-image/image.md5=/srv/pxe-yomi-image/image/pxe-yomi-image-sle15.x86_64-1.0.0.md5 /srv/tftpboot/pxe-yomi-image/image.config.bootoptions=/srv/pxe-yomi-image/image/pxe-yomi-image-sle15-x86_64-1.0.0.config.bootoptions /srv/tftpboot/pxe-yomi-image/image.xz=/srv/pxe-yomi-image/image/pxe-yomi-image-sle15.x86_64-1.0.0.xz' \
modules/specialized-guides/pages/salt/salt-yomi.adoc:135:  --kernel-options='rd.kiwi.install.pxe rd.kiwi.install.image=tftp://<server-address>/pxe-yomi-image/image.xz rd.kiwi.ramdisk ramdisk_size=2097152 net.ifnames=1'
modules/specialized-guides/pages/salt/salt-yomi.adoc:143:  --name=pxe-yomi-image \
modules/specialized-guides/pages/salt/salt-yomi.adoc:144:  --kernel=/srv/pxe-yomi-image/linux \
modules/specialized-guides/pages/salt/salt-yomi.adoc:145:  --initrd=/srv/pxe-yomi-image/initrd \
modules/specialized-guides/pages/salt/salt-yomi.adoc:146:  --boot-files='/srv/tftpboot/pxe-yomi-image/image.initrd=/srv/pxe-yomi-image/image/pxe-yomi-image-opensuse15.x86_64-1.0.0.initrd /srv/tftpboot/pxe-yomi-image/image.kernel=/srv/pxe-yomi-image/image/pxe-yomi-image-opensuse15.x86_64-1.0.0.kernel /srv/tftpboot/pxe-yomi-image/image.md5=/srv/pxe-yomi-image/image/pxe-yomi-image-opensuse15.x86_64-1.0.0.md5 /srv/tftpboot/pxe-yomi-image/image.config.bootoptions=/srv/pxe-yomi-image/image/pxe-yomi-image-opensuse15-x86_64-1.0.0.config.bootoptions /srv/tftpboot/pxe-yomi-image/image.xz=/srv/pxe-yomi-image/image/pxe-yomi-image-opensuse15.x86_64-1.0.0.xz' \
modules/specialized-guides/pages/salt/salt-yomi.adoc:147:  --kernel-options='rd.kiwi.install.pxe rd.kiwi.install.image=tftp://<server-address>/pxe-yomi-image/image.xz rd.kiwi.ramdisk ramdisk_size=2097152 net.ifnames=1'
modules/specialized-guides/pages/salt/salt-yomi.adoc:151:By default, the ``salt-minion`` service in ``pxe-yomi-image`` is configured to find the Salt master under the ``salt`` address.
modules/specialized-guides/pages/salt/salt-yomi.adoc:158:. On the {productname} Server, at the command prompt, as root, define a profile in {cobbler} based on the image.
modules/specialized-guides/pages/salt/salt-yomi.adoc:163:  --distro=pxe-yomi-image
modules/specialized-guides/pages/salt/salt-yomi.adoc:166:    If you know the MAC address for the new client to be provisioned, you can have it boot directly from the Yomi image.
modules/specialized-guides/pages/salt/salt-yomi.adoc:191:To begin, boot the client that you want to provision using the Yomi PXE boot image, using the {cobbler} procedures described earlier in this section.
modules/specialized-guides/pages/salt/salt-large-scale-tuning.adoc:61:image::parameter_graph.svg[Tuning dependency graph]
modules/specialized-guides/pages/salt/salt-formulas-custom.adoc:499:image::formula-custom-harddisk-partitions.png[]
modules/specialized-guides/pages/public-cloud-guide/byos/setup.adoc:10:Most public cloud providers make a BYOS image of {productname} available.
modules/specialized-guides/pages/public-cloud-guide/byos/setup.adoc:20:On-demand {sles} pay as you go (PAYG) image::
modules/specialized-guides/pages/public-cloud-guide/byos/setup.adoc:21:Most public cloud providers make {sles} available as a BYOS image.
modules/specialized-guides/pages/public-cloud-guide/byos/setup.adoc:29:Depending on the public cloud you are using, you can usually locate the {productname} Server BYOS images by searching for ``suse manager``.
modules/specialized-guides/pages/public-cloud-guide/byos/setup.adoc:35:When you have your virtual machine ready, and the BYOS image installed, you need to set up {productname}.
modules/specialized-guides/pages/public-cloud-guide/byos/byos-overview.adoc:5:{byoslongform} ({byos}) images are useful if you already have a support contract with SUSE and want to move your workloads to the public cloud.
modules/specialized-guides/pages/public-cloud-guide/byos/byos-overview.adoc:6:An instance launched from a {byos} image is equivalent to a physical machine that just received a SUSE Linux Enterprise Server installation from the {sles} installation image.
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-configure-the-image.adoc:3:This section covers initial preparation and configuration of the image on {aws}.
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-configure-the-image.adoc:21:. Select the AMI image and provide a meaningful **name** for your server.
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-configure-the-image.adoc:26:.. The image automatically suggests a **default CPU configuration**.
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-configure-the-image.adoc:57:Keep in mind that since this is a {payg} image, you will be billed according to your actual usage, including the number of systems you **manage** and **monitor** with this instance. It's essential to regularly track and review your usage to prevent unexpected costs and ensure alignment with your needs.
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-connections-and-bootstrapping.adoc:3:== Managing connections and registering PAYG and BYOS images
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-connections-and-bootstrapping.adoc:6:Connecting and registering PAYG images is supported and can be done without additional prerequisites.
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-connections-and-bootstrapping.adoc:10:Registering BYOS images requires SCC (SUSE Customer Center) credentials beforehand. If a user attempts to onboard a BYOS image without providing SCC credentials, the operation will fail, as these credentials are required to verify your subscription.
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-connections-and-bootstrapping.adoc:14:* Always verify the type of image (PAYG or BYOS) prior to initiating the registration process with {productname} to ensure a smooth and error-free connection.
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-connections-and-bootstrapping.adoc:16:* If you have SCC credentials ensure your SCC credentials are valid and have the necessary permissions for utilizing BYOS images.
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-webui-configuration.adoc:6:{productname} must be setup and running on AWS. For more information on finding and setting up {productname}, see xref:specialized-guides:public-cloud-guide/payg/aws/payg-aws-public-cloud-images.adoc[Public Cloud Images].
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-public-cloud-images.adoc:1:= Obtaining the {productname} Server {payg} public cloud image on AWS
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-public-cloud-images.adoc:3:Follow these step-by-step instructions to locate the SUSE Manager {productnumber} {payg} image on {aws}.
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-public-cloud-images.adoc:4:You can also review the latest available images for the public cloud using Pint (Public Cloud Information Tracker).
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-public-cloud-images.adoc:9:.Procedure: Obtaining the {productname} {payg} image on AWS
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-public-cloud-images.adoc:26:. Depending on your location select your AMI image. 
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-public-cloud-images.adoc:33:. Proceed for image configuration.
modules/specialized-guides/pages/public-cloud-guide/payg/aws/payg-aws-server-setup.adoc:22:You will see a list of partitions that were created when we configured the AWS image.
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-configure-the-image.adoc:2:This section covers initial preparation and configuration of the image on {azure}.
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-configure-the-image.adoc:20:. In the **Image** dropdown, select the **manager-server-4-3-ltd** or the **manager-server-4-3-llc** image for your VM. If the image is not listed, select **Browse all public and private images** to find the required image.
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-configure-the-image.adoc:29:. Configure additional settings such as storage, monitoring, or any extensions you may need. The following partitions are created by default when initializing the {azure} image:
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-configure-the-image.adoc:46:Keep in mind that since this is a {payg} image, you will be billed according to your actual usage, including the number of systems you **manage** and **monitor** with this instance. It's essential to regularly track and review your usage to prevent unexpected costs and ensure alignment with your needs.
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-connections-and-bootstrapping.adoc:3:== Managing connections and registering PAYG and BYOS images
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-connections-and-bootstrapping.adoc:6:Connecting and registering PAYG images is supported and can be done without additional prerequisites.
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-connections-and-bootstrapping.adoc:10:Registering BYOS images requires SCC (SUSE Customer Center) credentials beforehand. If a user attempts to onboard a BYOS image without providing SCC credentials, the operation will fail, as these credentials are required to verify your subscription.
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-connections-and-bootstrapping.adoc:14:* Always verify the type of image (PAYG or BYOS) prior to initiating the registration process with {productname} to ensure a smooth and error-free connection.
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-connections-and-bootstrapping.adoc:16:* If you have SCC credentials ensure your SCC credentials are valid and have the necessary permissions for utilizing BYOS images.
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-public-cloud-images.adoc:1:= Obtaining the {productname} Server {payg} public cloud image on {azure}
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-public-cloud-images.adoc:3:Follow these step-by-step instructions to locate the SUSE Manager {productnumber} {payg} image on {azure}.
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-public-cloud-images.adoc:4:You can also review the latest available images for the public cloud using Pint (Public Cloud Information Tracker). 
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-public-cloud-images.adoc:14:.Procedure: Obtaining the {productname} {payg} image on {azure}
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-public-cloud-images.adoc:21:. During the creation of a virtual machine there is an option for **Image.** Select the correct  cloud image for your VM. 
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-public-cloud-images.adoc:23:. If you don't find the image you need, you can browse the Azure Marketplace. Click on **See all images** or go to the **Marketplace** and search for the image you need. 
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-public-cloud-images.adoc:25:. After selecting your image, continue with the configuration of your virtual machine. Review all settings, and then create your VM.
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-webui-configuration.adoc:6:{productname} must be setup and running on {azure}. For more information on finding and setting up {productname}, see xref:specialized-guides:public-cloud-guide/payg/azure/payg-azure-public-cloud-images.adoc[Azure Public Cloud Images].
modules/specialized-guides/pages/public-cloud-guide/payg/azure/payg-azure-server-setup.adoc:59:You will see a list of partitions that were created when we configured the {azure} image.
modules/specialized-guides/pages/public-cloud-guide/payg/payg-overview.adoc:2::description: {productname} {payg} or {payglongform} is a flexible and cost-effective solution that allows users to manage and monitor their systems. Unlike traditional subscription models, {payg} does not require a long-term subscription. Users can leverage the images of {productname} on a {payglongform} basis, paying only for the time of use, and the number of managed and monitored systems. {payg} with {productname} is an optimal solution for those seeking control, convenience, and cost savings when managing and monitoring their infrastructure on AWS, Azure, and GCP.
modules/specialized-guides/pages/public-cloud-guide/payg/payg-overview.adoc:10:Users can leverage images of {productname} on a {payglongform} basis, paying only for the time of use, and the number of **managed** and **monitored** systems. {payg} with {productname} is an optimal solution for those seeking control, convenience, and cost savings when managing and monitoring their infrastructure on AWS, Azure, and GCP.
modules/specialized-guides/pages/public-cloud-guide/payg/payg-overview.adoc:26:* *Rapid Deployment:* Quickly run the image of your choice and begin managing your systems, enhancing responsiveness to your needs.
modules/specialized-guides/pages/public-cloud-guide/payg-support.adoc:22:The Public Cloud Information Tracker (PINT) provides information about the images SUSE publishes and servers that are part of the SUSE operated update infrastructure. PINT is available at link:https://pint.suse.com/[pint.suse.com]  and provided as an API and command-line tool with the **python3-susepubliccloudinfo** package from the Public Cloud Module repository.
modules/specialized-guides/pages/public-cloud-guide/faq/faq-billing-technical.adoc:14:The Cloud Marketplace listing for {productname} will deploy an special image which fires up a {productname} instance, together with the embedded billing engine.
modules/specialized-guides/pages/public-cloud-guide/faq/faq-billing-technical.adoc:18:The Cloud Marketplace listing for {productname} is tied to a specific version of {productname} (4.3.8 at launch).  Future listings will typically include the latest version available at the time of product/image creation. Please check the listing for further information.
modules/specialized-guides/pages/public-cloud-guide/faq/faq-billing-technical.adoc:30:It is worth noting that the image update process may not be fully aligned to the {productname} product maintenance releases (every 6-8 weeks), so {productname} instances should be patched regularly after deployment.
modules/specialized-guides/pages/public-cloud-guide/faq/faq-technical-billing.adoc:14:The Cloud Marketplace listing for {productname} will deploy an special image which fires up a {productname} instance, together with the embedded billing engine.
modules/specialized-guides/pages/public-cloud-guide/faq/faq-technical-billing.adoc:18:The Cloud Marketplace listing for {productname} is tied to a specific version of {productname} (4.3.8 at launch).  Future listings will typically include the latest version available at the time of product/image creation. Please check the listing for further information.
modules/specialized-guides/pages/public-cloud-guide/faq/faq-technical-billing.adoc:30:It is worth noting that the image update process may not be fully aligned to the {productname} product maintenance releases (every 6-8 weeks), so {productname} instances should be patched regularly after deployment.
use_po.sh:88:            mkdir -p $CURRENT_DIR/$PUB_DIR/$lang/modules/$module/assets/images && \
