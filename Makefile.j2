# Clean up build artifacts
.PHONY: clean-{{ langcode }}
clean-{{ langcode }}: clean-branding-{{ langcode }} ## Remove build artifacts from output directory (Antora and PDF)
	$(call clean-function,translations/{{ langcode }},{{ langcode }})

.PHONY: clean-branding-{{ langcode }}
clean-branding-{{ langcode }}:
	$(call clean-branding,{{ langcode }})

.PHONY: copy-branding-{{ langcode }}
copy-branding-{{ langcode }}: copy-branding
	$(call copy-branding,{{ langcode }})

.PHONY: validate-suma-{{ langcode }}
validate-suma-{{ langcode }}:
	$(call validate-product,translations/{{ langcode }},suma-site.yml)

.PHONY: pdf-tar-suma-{{ langcode }}
pdf-tar-suma-{{ langcode }}:
	$(call pdf-tar-product,{{ langcode }},susemanager-docs_{{ langcode }}-pdf,$(current_dir)/build/{{ langcode }}/pdf)

.PHONY: fix-lunr-search-in-translations-suma-{{ langcode }}
fix-lunr-search-in-translations-suma-{{ langcode }}:
	$(call fix-lunr-search-in-suma-translation,{{ langcode }})

.PHONY: set-html-language-selector-suma-{{ langcode }}
set-html-language-selector-suma-{{ langcode }}: set-html-language-selector-suma
	mkdir -p $(shell dirname translations/{{ langcode }}/$(SUPPLEMENTAL_FILES_SUMA))
	cp -a translations/$(SUPPLEMENTAL_FILES_SUMA) translations/{{ langcode }}/$(SUPPLEMENTAL_FILES_SUMA)

.PHONY: prepare-antora-suma-{{ langcode }}
prepare-antora-suma-{{ langcode }}: copy-branding-{{ langcode }} set-html-language-selector-suma-{{ langcode }}
	cd $(current_dir)
	mkdir -p $(current_dir)/translations/{{ langcode }} && \
	cp -a antora.yml translations/{{ langcode }}/antora.yml && \
	sed "s/\(url\:\ https\:\/\/documentation\.suse\.com\/suma\/4\.2\/\)/\1{{ langcode }}\//;\
	s/\-\ url\:\ \./\-\ url\:\ \.\.\/\.\.\//;\
	s/start_path\:\ \./\start_path\:\ translations\/{{ langcode }}/;\
	s/dir:\ \.\/build\/en/dir:\ \.\.\/\.\.\/build\/{{ langcode }}/;" suma-site.yml > translations/{{ langcode }}/suma-site.yml && \
	cp -a $(current_dir)/modules $(current_dir)/translations/en/
	find modules/ -maxdepth 1 -name "*" -type d -exec mkdir -p $(current_dir)/{{ langcode }}/{} \; && \
	mkdir -p $(current_dir)/{{ langcode }}/modules/ROOT/pages/
	cp -a $(current_dir)/modules/ROOT/pages/common_gfdl1.2_i.adoc $(current_dir)/translations/{{ langcode }}/modules/ROOT/pages/	
	cd $(current_dir)

.PHONY: antora-suma-{{ langcode }}
antora-suma-{{ langcode }}: prepare-antora-suma-{{ langcode }} pdf-all-suma-{{ langcode }} pdf-tar-suma-{{ langcode }}
	$(call antora-suma-function,translations/{{ langcode }},{{ langcode }})

.PHONY: obs-packages-suma-{{ langcode }}
obs-packages-suma-{{ langcode }}: pdf-all-suma-{{ langcode }} antora-suma-{{ langcode }} ## Generate SUMA OBS tar files
	$(call obs-packages-product,{{ langcode }},{{ langcode }}/pdf,susemanager-docs_{{ langcode }},susemanager-docs_{{ langcode }}-pdf)

# UYUNI

.PHONY: validate-uyuni-{{ langcode }}
validate-uyuni-{{ langcode }}:
	$(call validate-product,translations/{{ langcode }},uyuni-site.yml)

.PHONY: pdf-tar-uyuni-{{ langcode }}
pdf-tar-uyuni-{{ langcode }}:
	$(call pdf-tar-product,{{ langcode }},uyuni-docs_{{ langcode }}-pdf,$(current_dir)/build/{{ langcode }}/pdf)

.PHONY: fix-lunr-search-in-translations-uyuni-{{ langcode }}
fix-lunr-search-in-translations-uyuni-{{ langcode }}:
	$(call fix-lunr-search-in-uyuni-translation,{{ langcode }})

.PHONY: set-html-language-selector-uyuni-{{ langcode }}
set-html-language-selector-uyuni-{{ langcode }}: set-html-language-selector-uyuni
	mkdir -p $(shell dirname translations/{{ langcode }}/$(SUPPLEMENTAL_FILES_UYUNI))
	cp -a translations/$(SUPPLEMENTAL_FILES_UYUNI) translations/{{ langcode }}/$(SUPPLEMENTAL_FILES_UYUNI)

.PHONY: prepare-antora-uyuni-{{ langcode }}
prepare-antora-uyuni-{{ langcode }}: copy-branding-{{ langcode }} set-html-language-selector-uyuni-{{ langcode }}
	cd $(current_dir)
	mkdir -p $(current_dir)/translations/{{ langcode }} && \
	cp antora.yml translations/{{ langcode }}/antora.yml && \
	sed "s/\(url\:\ https\:\/\/www\.uyuni-project\.org\/uyuni-docs\/\)/\1{{ langcode }}\//;\
	s/\-\ url\:\ \./\-\ url\:\ \.\.\/\.\.\//;\
	s/start_path\:\ \./\start_path\:\ translations\/{{ langcode }}/;\
	s/dir:\ \.\/build\/en/dir:\ \.\.\/\.\.\/build\/{{ langcode }}/;" uyuni-site.yml > translations/{{ langcode }}/uyuni-site.yml && \
	cp -a $(current_dir)/modules $(current_dir)/translations/en/
	find modules/ -maxdepth 1 -name "*" -type d -exec mkdir -p $(current_dir)/{{ langcode }}/{} \; && \
	mkdir -p $(current_dir)/{{ langcode }}/modules/ROOT/pages/	
	cp -a $(current_dir)/modules/ROOT/pages/common_gfdl1.2_i.adoc $(current_dir)/translations/{{ langcode }}/modules/ROOT/pages/	
	cd $(current_dir)

.PHONY: antora-uyuni-{{ langcode }}
antora-uyuni-{{ langcode }}: prepare-antora-uyuni-{{ langcode }} pdf-all-uyuni-{{ langcode }} pdf-tar-uyuni-{{ langcode }}
	$(call antora-uyuni-function,translations/{{ langcode }},{{ langcode }})

.PHONY: obs-packages-uyuni-{{ langcode }}
obs-packages-uyuni-{{ langcode }}: pdf-all-uyuni-{{ langcode }} antora-uyuni-{{ langcode }} ## Generate UYUNI OBS tar files
	$(call obs-packages-product,{{ langcode }},{{ langcode }}/pdf,uyuni-docs_{{ langcode }},uyuni-docs_{{ langcode }}-pdf)
