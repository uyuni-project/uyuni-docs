#!/bin/bash

CURRENT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
EXIT_CODE=0

# Colors
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
BOLD='\033[1m'
NC='\033[0m'

# Emojis
GECKO="ü¶é"
BOOK="üìó"
CHECK="‚úÖ"
CROSS="‚ùå"
BAR_LABEL="üìä"
SUMMARY_LABEL="üìò"
CLOCK="üïí"

# Summary arrays
GUIDES=()
PERCENTS=()
UNUSED_COUNTS=()
UNUSED_FILES=()

# Strip ANSI escape codes (for measuring visible width)
strip_ansi() {
  sed 's/\x1b\[[0-9;]*m//g'
}

# Draw bar
draw_bar() {
  local percent=$1
  local bars=$((percent / 10))
  local empty=$((10 - bars))
  local bar=""
  for ((i = 0; i < bars; i++)); do bar+="‚ñà"; done
  for ((i = 0; i < empty; i++)); do bar+="‚ñë"; done

  if (( percent == 100 )); then
    echo -e "${GREEN}${BAR_LABEL} [$bar] $percent% ‚Äî All files used ${CHECK}${NC}"
  elif (( percent >= 70 )); then
    echo -e "${YELLOW}${BAR_LABEL} [$bar] $percent%${NC}"
  else
    echo -e "${RED}${BAR_LABEL} [$bar] $percent%${NC}"
  fi
}

# Truncate safely
truncate() {
  local str="$1"
  local maxlen=$2
  local plain="${str}"
  local ellipsis="‚Ä¶"
  if [ ${#plain} -le $maxlen ]; then
    printf "%s" "$str"
  else
    printf "%s" "${plain:0:$((maxlen - 1))}$ellipsis"
  fi
}

# Find unused files for a guide
find_unused() {
  GUIDE_NAME=$1
  echo -e "${GREEN}${BOOK} CHECKING GUIDE: ${GUIDE_NAME^^}${NC}"

  GUIDE_DIR="$CURRENT_DIR/modules/$GUIDE_NAME/pages"
  NAV_FILE="$CURRENT_DIR/modules/$GUIDE_NAME/nav-$GUIDE_NAME-guide.adoc"

  if [ ! -d "$GUIDE_DIR" ]; then
    echo "  => No directory found: $GUIDE_DIR"
    return
  fi

  if [ ! -f "$NAV_FILE" ]; then
    echo "  => No nav file found: $NAV_FILE"
    return
  fi

  UNUSED_IN_GUIDE=0
  TOTAL_FILES=0
  UNUSED_LIST=()

  mapfile -t FILES_ON_DISK < <(find "$GUIDE_DIR" -type f -iname '*.adoc' ! -iname 'README.adoc' | sort)

  for FILE_PATH in "${FILES_ON_DISK[@]}"; do
    FILE_NAME=$(basename "$FILE_PATH")
    TOTAL_FILES=$((TOTAL_FILES + 1))

    grep -q "$FILE_NAME" "$NAV_FILE" "$GUIDE_DIR"/*.adoc
    grepsult=$?

    if [ "$grepsult" -eq 0 ]; then
      echo -e "  ${GECKO} ${GREEN}$FILE_NAME${NC}"
    else
      echo -e "  ${CROSS} ${RED}$FILE_NAME${NC}"
      UNUSED_LIST+=("$FILE_NAME")
      UNUSED_IN_GUIDE=$((UNUSED_IN_GUIDE + 1))
      EXIT_CODE=$((EXIT_CODE + 1))
    fi
  done

  USED_FILES=$((TOTAL_FILES - UNUSED_IN_GUIDE))
  if [ "$TOTAL_FILES" -gt 0 ]; then
    PERCENT=$(( 100 * USED_FILES / TOTAL_FILES ))
  else
    PERCENT=100
  fi

  usage_output=$(draw_bar "$PERCENT")
  if [ "$UNUSED_IN_GUIDE" -gt 0 ]; then
    echo -e "$usage_output ‚Äî ${RED}${CROSS} Guide has unused files${NC}"
    echo -e "${RED}üö® Unused files in $GUIDE_NAME:${NC}"
    for FILE in "${UNUSED_LIST[@]}"; do
      echo -e "   ‚Ä¢ ${RED}$FILE${NC}"
    done
  else
    echo -e "$usage_output"
  fi

  GUIDES+=("$GUIDE_NAME")
  PERCENTS+=("$PERCENT")
  UNUSED_COUNTS+=("$UNUSED_IN_GUIDE")
  UNUSED_FILES+=("$(IFS=, ; echo "${UNUSED_LIST[*]}")")

  echo
}

# Check all guides
for dir in "$CURRENT_DIR"/modules/*; do
  if [ -d "$dir/pages" ]; then
    GUIDE_NAME=$(basename "$dir")
    find_unused "$GUIDE_NAME"
  fi
done

# Summary output
NOW=$(date +"%Y-%m-%d %H:%M:%S")
echo -e "${CLOCK} Checked at: ${BOLD}$NOW${NC}"
echo
echo -e "${SUMMARY_LABEL} ${BOLD}SUMMARY${NC}"
printf "%-22s  %-7s  %s\n" "Guide" "Used %" "Unused Files"
printf -- "----------------------  -------  ------------------------------\n"

SORTED_ROWS=()
CLEAN_COUNT=0
TOTAL_COUNT=0

for i in "${!GUIDES[@]}"; do
  guide="${GUIDES[$i]}"
  percent="${PERCENTS[$i]}"
  unused="${UNUSED_FILES[$i]}"
  SORTED_ROWS+=("${percent}~${guide}~${unused}")
done

IFS=$'\n' SORTED_ROWS=($(sort -t '~' -k1,1nr <<< "${SORTED_ROWS[*]}"))
unset IFS

for row in "${SORTED_ROWS[@]}"; do
  IFS='~' read -r percent_val guide unused <<< "$row"
  guide_disp="$(truncate "$guide" 22)"
  TOTAL_COUNT=$((TOTAL_COUNT + 1))

  percent_plain="${percent_val}%"
  if (( percent_val == 100 )); then
    percent_colored="${GREEN}${percent_plain}${NC}"
    status_icon="${CHECK}"
    CLEAN_COUNT=$((CLEAN_COUNT + 1))
  elif (( percent_val >= 70 )); then
    percent_colored="${YELLOW}${percent_plain}${NC}"
    status_icon="${CROSS}"
  else
    percent_colored="${RED}${percent_plain}${NC}"
    status_icon="${CROSS}"
  fi

  # Manual alignment for unused files column
  pad_to=33
  visible_used_len=$(echo -n "$percent_plain" | wc -c)
  padding=$(( pad_to - 22 - 2 - visible_used_len ))
  spaces=$(printf "%*s" "$padding" "")
  line_start="$(printf "%-22s  %s%s" "$guide_disp" "$percent_colored" "$spaces")"

  if [ -z "$unused" ]; then
    echo -e "$line_start$status_icon"
  else
    IFS=',' read -ra FILES <<< "$unused"
    file_1=$(truncate "${FILES[0]}" 30)
    echo -e "$line_start${RED}${file_1}${NC}"
    for j in "${FILES[@]:1}"; do
      file_line=$(truncate "$j" 30)
      echo -e "$(printf "%-33s" "")${RED}${file_line}${NC}"
    done
    echo
  fi
done

echo
echo -e "${BOLD}${GREEN}‚úÖ $CLEAN_COUNT of $TOTAL_COUNT guides have all files used.${NC}"
echo
echo "EXIT_CODE = $EXIT_CODE"
exit $EXIT_CODE
